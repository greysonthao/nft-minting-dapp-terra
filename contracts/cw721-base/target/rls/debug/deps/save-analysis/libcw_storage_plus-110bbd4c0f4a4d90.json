{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1","program":"/Users/tougerthao/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","cw_storage_plus","--edition=2018","/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"iterator\"","-C","metadata=110bbd4c0f4a4d90","-C","extra-filename=-110bbd4c0f4a4d90","--out-dir","/Users/tougerthao/Documents/cw-nfts/contracts/cw721-base/target/rls/debug/deps","-L","dependency=/Users/tougerthao/Documents/cw-nfts/contracts/cw721-base/target/rls/debug/deps","--extern","cosmwasm_std=/Users/tougerthao/Documents/cw-nfts/contracts/cw721-base/target/rls/debug/deps/libcosmwasm_std-1593b7f799b189e5.rmeta","--extern","schemars=/Users/tougerthao/Documents/cw-nfts/contracts/cw721-base/target/rls/debug/deps/libschemars-b8f31040fd5fd331.rmeta","--extern","serde=/Users/tougerthao/Documents/cw-nfts/contracts/cw721-base/target/rls/debug/deps/libserde-7fdbfeb8e07a36a8.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/tougerthao/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/tougerthao/Documents/cw-nfts/contracts/cw721-base/target/rls/debug/deps/libcw_storage_plus-110bbd4c0f4a4d90.rmeta"},"prelude":{"crate_id":{"name":"cw_storage_plus","disambiguator":[1403555302076982583,0]},"crate_root":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src","external_crates":[{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18209756222486151562,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18223145686901155897,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[14433101958683640425,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15722400896539721154,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[382214965992916939,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12260471395692023054,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15696538619420672016,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15516093453040911438,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14430044855280342380,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[22492058053637715,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[1365830122759399854,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[2559965663903648119,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15316470272468687976,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[643092319478642194,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[981374929740806444,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[10791241492110567838,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[7534896682886677764,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":18,"id":{"name":"cosmwasm_std","disambiguator":[8388510600260583998,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":19,"id":{"name":"schemars","disambiguator":[11512207823833296864,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":20,"id":{"name":"schemars_derive","disambiguator":[2304402464502311428,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":21,"id":{"name":"serde_json","disambiguator":[17012276503757529885,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/mod.rs","num":22,"id":{"name":"serde","disambiguator":[12543011906955241783,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/mod.rs","num":23,"id":{"name":"serde_derive","disambiguator":[4370373199869481327,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":24,"id":{"name":"itoa","disambiguator":[2041830107642316157,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":25,"id":{"name":"ryu","disambiguator":[13154332821420877577,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":26,"id":{"name":"dyn_clone","disambiguator":[7649631569723035575,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":27,"id":{"name":"cosmwasm_crypto","disambiguator":[334191650418447397,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":28,"id":{"name":"ed25519_zebra","disambiguator":[18361704986072811721,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":29,"id":{"name":"curve25519_dalek","disambiguator":[2401430826289914766,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":30,"id":{"name":"byteorder","disambiguator":[10735342110940260716,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":31,"id":{"name":"digest","disambiguator":[4276897524461622225,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":32,"id":{"name":"generic_array","disambiguator":[1698478991367040497,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":33,"id":{"name":"typenum","disambiguator":[17866519593418046750,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":34,"id":{"name":"rand_core","disambiguator":[16186765441329788119,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":35,"id":{"name":"getrandom","disambiguator":[8118748769237857396,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":36,"id":{"name":"cfg_if","disambiguator":[17816606192966835472,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":37,"id":{"name":"libc","disambiguator":[18050044312121880229,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":38,"id":{"name":"zeroize","disambiguator":[9293161599172796357,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":39,"id":{"name":"subtle","disambiguator":[7812541607650290894,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":40,"id":{"name":"sha2","disambiguator":[3869110900392443918,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":41,"id":{"name":"block_buffer","disambiguator":[9409465735937999441,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":42,"id":{"name":"opaque_debug","disambiguator":[13402968504476262561,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":43,"id":{"name":"thiserror","disambiguator":[1019335905089884059,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":44,"id":{"name":"thiserror_impl","disambiguator":[17665533985765907203,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":45,"id":{"name":"hex","disambiguator":[13004266589599214426,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":46,"id":{"name":"k256","disambiguator":[17879218212488291025,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":47,"id":{"name":"elliptic_curve","disambiguator":[14245001131624417930,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":48,"id":{"name":"ff","disambiguator":[11221110016983143056,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":49,"id":{"name":"rand_core","disambiguator":[13146380543229624623,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":50,"id":{"name":"getrandom","disambiguator":[16445642400997538632,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":51,"id":{"name":"group","disambiguator":[12483826582080316915,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":52,"id":{"name":"pkcs8","disambiguator":[15046987790231658805,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":53,"id":{"name":"der","disambiguator":[18385387411960093906,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":54,"id":{"name":"const_oid","disambiguator":[5470671774982399226,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":55,"id":{"name":"spki","disambiguator":[17172856694552063463,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":56,"id":{"name":"crypto_bigint","disambiguator":[13224746803228873343,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":57,"id":{"name":"ecdsa","disambiguator":[11112978992786675994,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":58,"id":{"name":"hmac","disambiguator":[239408707501002412,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":59,"id":{"name":"crypto_mac","disambiguator":[4397787496582331645,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":60,"id":{"name":"signature","disambiguator":[5489538515306434670,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":61,"id":{"name":"cosmwasm_derive","disambiguator":[11173798631952121850,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":62,"id":{"name":"uint","disambiguator":[4603186583979008561,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":63,"id":{"name":"static_assertions","disambiguator":[18127994233071131032,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":64,"id":{"name":"crunchy","disambiguator":[12956521092432860273,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":65,"id":{"name":"base64","disambiguator":[16694546120879942520,0]}},{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","num":66,"id":{"name":"serde_json_wasm","disambiguator":[2566291486924484222,0]}}],"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":0,"byte_end":1148,"line_start":1,"line_end":43,"column_start":1,"column_end":57}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":479},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/mod.rs","byte_start":104132,"byte_end":104142,"line_start":6,"line_end":6,"column_start":16,"column_end":26},"alias_span":null,"name":"MultiIndex","value":"","parent":{"krate":0,"index":414}},{"kind":"Use","ref_id":{"krate":0,"index":620},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/mod.rs","byte_start":104160,"byte_end":104171,"line_start":7,"line_end":7,"column_start":17,"column_end":28},"alias_span":null,"name":"UniqueIndex","value":"","parent":{"krate":0,"index":414}},{"kind":"Use","ref_id":{"krate":0,"index":104},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":224,"byte_end":230,"line_start":18,"line_end":18,"column_start":17,"column_end":23},"alias_span":null,"name":"Endian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":225},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":283,"byte_end":292,"line_start":20,"line_end":20,"column_start":23,"column_end":32},"alias_span":null,"name":"IndexList","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":228},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":294,"byte_end":304,"line_start":20,"line_end":20,"column_start":34,"column_end":44},"alias_span":null,"name":"IndexedMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":348},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":362,"byte_end":380,"line_start":22,"line_end":22,"column_start":27,"column_end":45},"alias_span":null,"name":"IndexedSnapshotMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":479},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":428,"byte_end":438,"line_start":24,"line_end":24,"column_start":18,"column_end":28},"alias_span":null,"name":"MultiIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":620},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":486,"byte_end":497,"line_start":26,"line_end":26,"column_start":18,"column_end":29},"alias_span":null,"name":"UniqueIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":707},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":546,"byte_end":558,"line_start":28,"line_end":28,"column_start":19,"column_end":31},"alias_span":null,"name":"index_string","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":710},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":560,"byte_end":578,"line_start":28,"line_end":28,"column_start":33,"column_end":51},"alias_span":null,"name":"index_string_tuple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":709},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":580,"byte_end":592,"line_start":28,"line_end":28,"column_start":53,"column_end":65},"alias_span":null,"name":"index_triple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":708},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":594,"byte_end":605,"line_start":28,"line_end":28,"column_start":67,"column_end":78},"alias_span":null,"name":"index_tuple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":711},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":607,"byte_end":612,"line_start":28,"line_end":28,"column_start":80,"column_end":85},"alias_span":null,"name":"Index","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":764},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":629,"byte_end":633,"line_start":29,"line_end":29,"column_start":15,"column_end":19},"alias_span":null,"name":"Item","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":978},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":707,"byte_end":714,"line_start":32,"line_end":32,"column_start":16,"column_end":23},"alias_span":null,"name":"I128Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":975},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":716,"byte_end":722,"line_start":32,"line_end":32,"column_start":25,"column_end":31},"alias_span":null,"name":"I16Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":976},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":724,"byte_end":730,"line_start":32,"line_end":32,"column_start":33,"column_end":39},"alias_span":null,"name":"I32Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":977},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":732,"byte_end":738,"line_start":32,"line_end":32,"column_start":41,"column_end":47},"alias_span":null,"name":"I64Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":974},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":740,"byte_end":745,"line_start":32,"line_end":32,"column_start":49,"column_end":54},"alias_span":null,"name":"I8Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":719},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":801,"byte_end":809,"line_start":34,"line_end":34,"column_start":18,"column_end":26},"alias_span":null,"name":"CwIntKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1987},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":847,"byte_end":850,"line_start":36,"line_end":36,"column_start":16,"column_end":19},"alias_span":null,"name":"Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":891},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":852,"byte_end":860,"line_start":36,"line_end":36,"column_start":21,"column_end":29},"alias_span":null,"name":"Prefixer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":842},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":862,"byte_end":872,"line_start":36,"line_end":36,"column_start":31,"column_end":41},"alias_span":null,"name":"PrimaryKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":973},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":874,"byte_end":881,"line_start":36,"line_end":36,"column_start":43,"column_end":50},"alias_span":null,"name":"U128Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":970},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":883,"byte_end":889,"line_start":36,"line_end":36,"column_start":52,"column_end":58},"alias_span":null,"name":"U16Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":971},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":891,"byte_end":897,"line_start":36,"line_end":36,"column_start":60,"column_end":66},"alias_span":null,"name":"U32Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":972},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":899,"byte_end":905,"line_start":36,"line_end":36,"column_start":68,"column_end":74},"alias_span":null,"name":"U64Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":969},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":907,"byte_end":912,"line_start":36,"line_end":36,"column_start":76,"column_end":81},"alias_span":null,"name":"U8Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2126},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":933,"byte_end":942,"line_start":37,"line_end":37,"column_start":19,"column_end":28},"alias_span":null,"name":"IntKeyOld","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2147},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":957,"byte_end":960,"line_start":38,"line_end":38,"column_start":14,"column_end":17},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2164},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":976,"byte_end":980,"line_start":39,"line_end":39,"column_start":15,"column_end":19},"alias_span":null,"name":"Path","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1334},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":1028,"byte_end":1045,"line_start":41,"line_end":41,"column_start":18,"column_end":35},"alias_span":null,"name":"range_with_prefix","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2174},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":1047,"byte_end":1052,"line_start":41,"line_end":41,"column_start":37,"column_end":42},"alias_span":null,"name":"Bound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2202},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":1054,"byte_end":1060,"line_start":41,"line_end":41,"column_start":44,"column_end":50},"alias_span":null,"name":"Prefix","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1382},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":1111,"byte_end":1123,"line_start":43,"line_end":43,"column_start":20,"column_end":32},"alias_span":null,"name":"SnapshotItem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1461},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":1125,"byte_end":1136,"line_start":43,"line_end":43,"column_start":34,"column_end":45},"alias_span":null,"name":"SnapshotMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2231},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":1138,"byte_end":1146,"line_start":43,"line_end":43,"column_start":47,"column_end":55},"alias_span":null,"name":"Strategy","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","byte_start":0,"byte_end":1148,"line_start":1,"line_end":43,"column_start":1,"column_end":57},"name":"","qualname":"::","value":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":79},{"krate":0,"index":100},{"krate":0,"index":112},{"krate":0,"index":169},{"krate":0,"index":292},{"krate":0,"index":414},{"krate":0,"index":715},{"krate":0,"index":725},{"krate":0,"index":785},{"krate":0,"index":813},{"krate":0,"index":1007},{"krate":0,"index":1051},{"krate":0,"index":1167},{"krate":0,"index":1222},{"krate":0,"index":1354},{"krate":0,"index":1579},{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1586},{"krate":0,"index":1589},{"krate":0,"index":1592},{"krate":0,"index":1595},{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1602},{"krate":0,"index":1605},{"krate":0,"index":1608},{"krate":0,"index":1611},{"krate":0,"index":1614},{"krate":0,"index":1617},{"krate":0,"index":1618},{"krate":0,"index":1621},{"krate":0,"index":1624},{"krate":0,"index":1627},{"krate":0,"index":1630},{"krate":0,"index":1633},{"krate":0,"index":1636},{"krate":0,"index":1637},{"krate":0,"index":1640},{"krate":0,"index":1643},{"krate":0,"index":1646},{"krate":0,"index":1649},{"krate":0,"index":1652},{"krate":0,"index":1655},{"krate":0,"index":1658},{"krate":0,"index":1661},{"krate":0,"index":1664},{"krate":0,"index":1667},{"krate":0,"index":1670},{"krate":0,"index":1671},{"krate":0,"index":1674},{"krate":0,"index":1677},{"krate":0,"index":1680},{"krate":0,"index":1681},{"krate":0,"index":1684},{"krate":0,"index":1687}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":30},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","byte_start":1400,"byte_end":1414,"line_start":12,"line_end":12,"column_start":11,"column_end":25},"name":"KeyDeserialize","qualname":"::de::KeyDeserialize","value":"KeyDeserialize","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":31},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","byte_start":1426,"byte_end":1432,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"Output","qualname":"::de::KeyDeserialize::Output","value":"type Output: Sized;","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","byte_start":1449,"byte_end":1457,"line_start":15,"line_end":15,"column_start":8,"column_end":16},"name":"from_vec","qualname":"::de::KeyDeserialize::from_vec","value":"pub fn from_vec(Vec<u8>) -> StdResult<Self::Output>","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","byte_start":1510,"byte_end":1520,"line_start":17,"line_end":17,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::de::KeyDeserialize::from_slice","value":"pub fn from_slice(&[u8]) -> StdResult<Self::Output>","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":104},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/endian.rs","byte_start":16096,"byte_end":16102,"line_start":12,"line_end":12,"column_start":11,"column_end":17},"name":"Endian","qualname":"::endian::Endian","value":"Endian: Sized + Copy","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":105},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/endian.rs","byte_start":16128,"byte_end":16131,"line_start":13,"line_end":13,"column_start":10,"column_end":13},"name":"Buf","qualname":"::endian::Endian::Buf","value":"type Buf: AsRef<[u8]> + AsMut<[u8]> + Into<Vec<u8>> + Default;","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/endian.rs","byte_start":16194,"byte_end":16205,"line_start":15,"line_end":15,"column_start":8,"column_end":19},"name":"to_le_bytes","qualname":"::endian::Endian::to_le_bytes","value":"pub fn to_le_bytes(Self) -> Self::Buf","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/endian.rs","byte_start":16233,"byte_end":16244,"line_start":16,"line_end":16,"column_start":8,"column_end":19},"name":"to_be_bytes","qualname":"::endian::Endian::to_be_bytes","value":"pub fn to_be_bytes(Self) -> Self::Buf","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/endian.rs","byte_start":16273,"byte_end":16286,"line_start":18,"line_end":18,"column_start":8,"column_end":21},"name":"from_le_bytes","qualname":"::endian::Endian::from_le_bytes","value":"pub fn from_le_bytes(Self::Buf) -> Self","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/endian.rs","byte_start":16321,"byte_end":16334,"line_start":19,"line_end":19,"column_start":8,"column_end":21},"name":"from_be_bytes","qualname":"::endian::Endian::from_be_bytes","value":"pub fn from_be_bytes(Self::Buf) -> Self","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":225},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":24221,"byte_end":24230,"line_start":16,"line_end":16,"column_start":11,"column_end":20},"name":"IndexList","qualname":"::indexed_map::IndexList","value":"IndexList<T>","parent":null,"children":[{"krate":0,"index":227}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":24243,"byte_end":24254,"line_start":17,"line_end":17,"column_start":8,"column_end":19},"name":"get_indexes","qualname":"::indexed_map::IndexList::get_indexes","value":"pub fn get_indexes(&Self) -> Box<dyn Iterator<Item = &dyn Index<T>>>","parent":{"krate":0,"index":225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":228},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":24448,"byte_end":24458,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"name":"IndexedMap","qualname":"::indexed_map::IndexedMap","value":"IndexedMap { idx }","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235}],"decl_id":null,"docs":" `IndexedMap` works like a `Map` but has a secondary index\n","sig":null,"attributes":[{"value":"/ `IndexedMap` works like a `Map` but has a secondary index","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":24375,"byte_end":24436,"line_start":21,"line_end":21,"column_start":1,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":235},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":24739,"byte_end":24742,"line_start":32,"line_end":32,"column_start":9,"column_end":12},"name":"idx","qualname":"::indexed_map::IndexedMap::idx","value":"I","parent":{"krate":0,"index":228},"children":[],"decl_id":null,"docs":" This is meant to be read directly to get the proper types, like:\n map.idx.owner.items(...)\n","sig":null,"attributes":[{"value":"/ This is meant to be read directly to get the proper types, like:","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":24629,"byte_end":24697,"line_start":30,"line_end":30,"column_start":5,"column_end":73}},{"value":"/ map.idx.owner.items(...)","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":24702,"byte_end":24730,"line_start":31,"line_end":31,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":24959,"byte_end":24962,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexedMap>::new","value":"pub fn new(&'a str, I) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":25179,"byte_end":25182,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"key","qualname":"<IndexedMap>::key","value":"pub fn key(&Self, K) -> Path<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":25660,"byte_end":25664,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"save","qualname":"<IndexedMap>::save","value":"pub fn save(&Self, &mut dyn Storage, K, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues.\n this must load the old value to update the indexes properly\n if you loaded the old value earlier in the same function, use replace to avoid needless db reads\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":25389,"byte_end":25475,"line_start":61,"line_end":61,"column_start":5,"column_end":91}},{"value":"/ this must load the old value to update the indexes properly","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":25480,"byte_end":25543,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ if you loaded the old value earlier in the same function, use replace to avoid needless db reads","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":25548,"byte_end":25648,"line_start":63,"line_end":63,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":25875,"byte_end":25881,"line_start":69,"line_end":69,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexedMap>::remove","value":"pub fn remove(&Self, &mut dyn Storage, K) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":26328,"byte_end":26335,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"replace","qualname":"<IndexedMap>::replace","value":"pub fn replace(&Self, &mut dyn Storage, K, Option<&T>, Option<&T>)\n-> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" replace writes data to key. old_data must be the current stored value (from a previous load)\n and is used to properly update the index. This is used by save, replace, and update\n and can be called directly if you want to optimize\n","sig":null,"attributes":[{"value":"/ replace writes data to key. old_data must be the current stored value (from a previous load)","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":26069,"byte_end":26165,"line_start":74,"line_end":74,"column_start":5,"column_end":101}},{"value":"/ and is used to properly update the index. This is used by save, replace, and update","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":26170,"byte_end":26257,"line_start":75,"line_end":75,"column_start":5,"column_end":92}},{"value":"/ and can be called directly if you want to optimize","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":26262,"byte_end":26316,"line_start":76,"line_end":76,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":27325,"byte_end":27331,"line_start":106,"line_end":106,"column_start":12,"column_end":18},"name":"update","qualname":"<IndexedMap>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, K, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":27047,"byte_end":27117,"line_start":102,"line_end":102,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":27122,"byte_end":27208,"line_start":103,"line_end":103,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":27213,"byte_end":27216,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":27221,"byte_end":27313,"line_start":105,"line_end":105,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":27966,"byte_end":27970,"line_start":122,"line_end":122,"column_start":12,"column_end":16},"name":"load","qualname":"<IndexedMap>::load","value":"pub fn load(&Self, &dyn Storage, K) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":27871,"byte_end":27954,"line_start":121,"line_end":121,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":28226,"byte_end":28234,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"may_load","qualname":"<IndexedMap>::may_load","value":"pub fn may_load(&Self, &dyn Storage, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":28074,"byte_end":28171,"line_start":126,"line_end":126,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":28176,"byte_end":28214,"line_start":127,"line_end":127,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":28854,"byte_end":28863,"line_start":147,"line_end":147,"column_start":12,"column_end":21},"name":"range_raw","qualname":"<IndexedMap>::range_raw","value":"pub fn range_raw<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                     cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Record<T>>> + 'c> where\nT: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":29195,"byte_end":29203,"line_start":160,"line_end":160,"column_start":12,"column_end":20},"name":"keys_raw","qualname":"<IndexedMap>::keys_raw","value":"pub fn keys_raw<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                    cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = Vec<u8>> + 'c>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":30066,"byte_end":30082,"line_start":183,"line_end":183,"column_start":12,"column_end":28},"name":"prefix_range_raw","qualname":"<IndexedMap>::prefix_range_raw","value":"pub fn prefix_range_raw<'c>(&Self, &'c dyn Storage, Option<PrefixBound>,\n                            Option<PrefixBound>, cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Record<T>>> + 'c> where\nT: 'c, 'a:'c","parent":null,"children":[],"decl_id":null,"docs":" While `range_raw` over a `prefix` fixes the prefix to one element and iterates over the\n remaining, `prefix_range_raw` accepts bounds for the lowest and highest elements of the `Prefix`\n itself, and iterates over those (inclusively or exclusively, depending on `PrefixBound`).\n There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't\n solve them.\n","sig":null,"attributes":[{"value":"/ While `range_raw` over a `prefix` fixes the prefix to one element and iterates over the","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":29641,"byte_end":29732,"line_start":178,"line_end":178,"column_start":5,"column_end":96}},{"value":"/ remaining, `prefix_range_raw` accepts bounds for the lowest and highest elements of the `Prefix`","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":29737,"byte_end":29837,"line_start":179,"line_end":179,"column_start":5,"column_end":105}},{"value":"/ itself, and iterates over those (inclusively or exclusively, depending on `PrefixBound`).","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":29842,"byte_end":29935,"line_start":180,"line_end":180,"column_start":5,"column_end":98}},{"value":"/ There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":29940,"byte_end":30034,"line_start":181,"line_end":181,"column_start":5,"column_end":99}},{"value":"/ solve them.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":30039,"byte_end":30054,"line_start":182,"line_end":182,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":30724,"byte_end":30734,"line_start":207,"line_end":207,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<IndexedMap>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix) -> Prefix<K::SuperSuffix, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":30860,"byte_end":30866,"line_start":211,"line_end":211,"column_start":12,"column_end":18},"name":"prefix","qualname":"<IndexedMap>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<K::Suffix, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":31589,"byte_end":31601,"line_start":229,"line_end":229,"column_start":12,"column_end":24},"name":"prefix_range","qualname":"<IndexedMap>::prefix_range","value":"pub fn prefix_range<'c>(&Self, &'c dyn Storage, Option<PrefixBound>,\n                        Option<PrefixBound>, cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'c> where T: 'c,\n'a:'c, K: 'c, K::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" While `range` over a `prefix` fixes the prefix to one element and iterates over the\n remaining, `prefix_range` accepts bounds for the lowest and highest elements of the\n `Prefix` itself, and iterates over those (inclusively or exclusively, depending on\n `PrefixBound`).\n There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't\n solve them.\n","sig":null,"attributes":[{"value":"/ While `range` over a `prefix` fixes the prefix to one element and iterates over the","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":31164,"byte_end":31251,"line_start":223,"line_end":223,"column_start":5,"column_end":92}},{"value":"/ remaining, `prefix_range` accepts bounds for the lowest and highest elements of the","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":31256,"byte_end":31343,"line_start":224,"line_end":224,"column_start":5,"column_end":92}},{"value":"/ `Prefix` itself, and iterates over those (inclusively or exclusively, depending on","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":31348,"byte_end":31434,"line_start":225,"line_end":225,"column_start":5,"column_end":91}},{"value":"/ `PrefixBound`).","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":31439,"byte_end":31458,"line_start":226,"line_end":226,"column_start":5,"column_end":24}},{"value":"/ There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":31463,"byte_end":31557,"line_start":227,"line_end":227,"column_start":5,"column_end":99}},{"value":"/ solve them.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":31562,"byte_end":31577,"line_start":228,"line_end":228,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":32117,"byte_end":32122,"line_start":247,"line_end":247,"column_start":12,"column_end":17},"name":"range","qualname":"<IndexedMap>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                 cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'c> where T: 'c,\nK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":32465,"byte_end":32469,"line_start":261,"line_end":261,"column_start":12,"column_end":16},"name":"keys","qualname":"<IndexedMap>::keys","value":"pub fn keys<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<K::Output>> + 'c> where T: 'c,\nK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":348},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":69151,"byte_end":69169,"line_start":16,"line_end":16,"column_start":12,"column_end":30},"name":"IndexedSnapshotMap","qualname":"::indexed_snapshot::IndexedSnapshotMap","value":"IndexedSnapshotMap { idx }","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355}],"decl_id":null,"docs":" `IndexedSnapshotMap` works like a `SnapshotMap` but has a secondary index\n","sig":null,"attributes":[{"value":"/ `IndexedSnapshotMap` works like a `SnapshotMap` but has a secondary index","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":69062,"byte_end":69139,"line_start":15,"line_end":15,"column_start":1,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":355},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":69363,"byte_end":69366,"line_start":21,"line_end":21,"column_start":9,"column_end":12},"name":"idx","qualname":"::indexed_snapshot::IndexedSnapshotMap::idx","value":"I","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":" This is meant to be read directly to get the proper types, like:\n map.idx.owner.items(...)\n","sig":null,"attributes":[{"value":"/ This is meant to be read directly to get the proper types, like:","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":69253,"byte_end":69321,"line_start":19,"line_end":19,"column_start":5,"column_end":73}},{"value":"/ map.idx.owner.items(...)","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":69326,"byte_end":69354,"line_start":20,"line_end":20,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":70001,"byte_end":70004,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexedSnapshotMap>::new","value":"pub fn new(&'a str, &'a str, &'a str, Strategy, I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Examples:","sig":null,"attributes":[{"value":"/ Examples:","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":69430,"byte_end":69443,"line_start":25,"line_end":25,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":69448,"byte_end":69451,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":69456,"byte_end":69467,"line_start":27,"line_end":27,"column_start":5,"column_end":16}},{"value":"/ use cw_storage_plus::{IndexedSnapshotMap, Strategy, UniqueIndex};","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":69472,"byte_end":69541,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":69546,"byte_end":69549,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ #[derive(PartialEq, Debug, Clone)]","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":69554,"byte_end":69592,"line_start":30,"line_end":30,"column_start":5,"column_end":43}},{"value":"/ struct Data {","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":69597,"byte_end":69614,"line_start":31,"line_end":31,"column_start":5,"column_end":22}},{"value":"/     pub name: String,","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":69619,"byte_end":69644,"line_start":32,"line_end":32,"column_start":5,"column_end":30}},{"value":"/     pub age: u32,","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":69649,"byte_end":69670,"line_start":33,"line_end":33,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":69675,"byte_end":69680,"line_start":34,"line_end":34,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":69685,"byte_end":69688,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ let indexes = UniqueIndex::new(|d: &Data| d.age, \"data__age\");","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":69693,"byte_end":69759,"line_start":36,"line_end":36,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":69764,"byte_end":69767,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ IndexedSnapshotMap::<&[u8], Data, UniqueIndex<u32, Data>>::new(","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":69772,"byte_end":69839,"line_start":38,"line_end":38,"column_start":5,"column_end":72}},{"value":"/     \"data\",","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":69844,"byte_end":69859,"line_start":39,"line_end":39,"column_start":5,"column_end":20}},{"value":"/     \"checkpoints\",","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":69864,"byte_end":69886,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"/     \"changelog\",","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":69891,"byte_end":69911,"line_start":41,"line_end":41,"column_start":5,"column_end":25}},{"value":"/     Strategy::EveryBlock,","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":69916,"byte_end":69945,"line_start":42,"line_end":42,"column_start":5,"column_end":34}},{"value":"/     indexes,","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":69950,"byte_end":69966,"line_start":43,"line_end":43,"column_start":5,"column_end":21}},{"value":"/ );","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":69971,"byte_end":69977,"line_start":44,"line_end":44,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":69982,"byte_end":69989,"line_start":45,"line_end":45,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":70561,"byte_end":70575,"line_start":67,"line_end":67,"column_start":12,"column_end":26},"name":"add_checkpoint","qualname":"<IndexedSnapshotMap>::add_checkpoint","value":"pub fn add_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":70709,"byte_end":70726,"line_start":71,"line_end":71,"column_start":12,"column_end":29},"name":"remove_checkpoint","qualname":"<IndexedSnapshotMap>::remove_checkpoint","value":"pub fn remove_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":70863,"byte_end":70881,"line_start":75,"line_end":75,"column_start":12,"column_end":30},"name":"may_load_at_height","qualname":"<IndexedSnapshotMap>::may_load_at_height","value":"pub fn may_load_at_height(&Self, &dyn Storage, K, u64) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":71070,"byte_end":71089,"line_start":84,"line_end":84,"column_start":12,"column_end":31},"name":"assert_checkpointed","qualname":"<IndexedSnapshotMap>::assert_checkpointed","value":"pub fn assert_checkpointed(&Self, &dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":71224,"byte_end":71227,"line_start":88,"line_end":88,"column_start":12,"column_end":15},"name":"key","qualname":"<IndexedSnapshotMap>::key","value":"pub fn key(&Self, K) -> Path<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":71745,"byte_end":71749,"line_start":102,"line_end":102,"column_start":12,"column_end":16},"name":"save","qualname":"<IndexedSnapshotMap>::save","value":"pub fn save(&Self, &mut dyn Storage, K, &T, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues.\n this must load the old value to update the indexes properly\n if you loaded the old value earlier in the same function, use replace to avoid needless db reads\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":71474,"byte_end":71560,"line_start":99,"line_end":99,"column_start":5,"column_end":91}},{"value":"/ this must load the old value to update the indexes properly","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":71565,"byte_end":71628,"line_start":100,"line_end":100,"column_start":5,"column_end":68}},{"value":"/ if you loaded the old value earlier in the same function, use replace to avoid needless db reads","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":71633,"byte_end":71733,"line_start":101,"line_end":101,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":71981,"byte_end":71987,"line_start":107,"line_end":107,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexedSnapshotMap>::remove","value":"pub fn remove(&Self, &mut dyn Storage, K, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":72455,"byte_end":72462,"line_start":115,"line_end":115,"column_start":12,"column_end":19},"name":"replace","qualname":"<IndexedSnapshotMap>::replace","value":"pub fn replace(&Self, &mut dyn Storage, K, Option<&T>, Option<&T>, u64)\n-> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" replace writes data to key. old_data must be the current stored value (from a previous load)\n and is used to properly update the index. This is used by save, replace, and update\n and can be called directly if you want to optimize\n","sig":null,"attributes":[{"value":"/ replace writes data to key. old_data must be the current stored value (from a previous load)","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":72196,"byte_end":72292,"line_start":112,"line_end":112,"column_start":5,"column_end":101}},{"value":"/ and is used to properly update the index. This is used by save, replace, and update","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":72297,"byte_end":72384,"line_start":113,"line_end":113,"column_start":5,"column_end":92}},{"value":"/ and can be called directly if you want to optimize","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":72389,"byte_end":72443,"line_start":114,"line_end":114,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":73490,"byte_end":73496,"line_start":145,"line_end":145,"column_start":12,"column_end":18},"name":"update","qualname":"<IndexedSnapshotMap>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, K, u64, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":73212,"byte_end":73282,"line_start":141,"line_end":141,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":73287,"byte_end":73373,"line_start":142,"line_end":142,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":73378,"byte_end":73381,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":73386,"byte_end":73478,"line_start":144,"line_end":144,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":74199,"byte_end":74203,"line_start":167,"line_end":167,"column_start":12,"column_end":16},"name":"load","qualname":"<IndexedSnapshotMap>::load","value":"pub fn load(&Self, &dyn Storage, K) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":74104,"byte_end":74187,"line_start":166,"line_end":166,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":74459,"byte_end":74467,"line_start":173,"line_end":173,"column_start":12,"column_end":20},"name":"may_load","qualname":"<IndexedSnapshotMap>::may_load","value":"pub fn may_load(&Self, &dyn Storage, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":74307,"byte_end":74404,"line_start":171,"line_end":171,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":74409,"byte_end":74447,"line_start":172,"line_end":172,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":74628,"byte_end":74641,"line_start":178,"line_end":178,"column_start":12,"column_end":25},"name":"no_prefix_raw","qualname":"<IndexedSnapshotMap>::no_prefix_raw","value":"pub fn no_prefix_raw(&Self) -> Prefix<Vec<u8>, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":75131,"byte_end":75140,"line_start":192,"line_end":192,"column_start":12,"column_end":21},"name":"range_raw","qualname":"<IndexedSnapshotMap>::range_raw","value":"pub fn range_raw<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                     cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Record<T>>> + 'c> where\nT: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":75472,"byte_end":75480,"line_start":205,"line_end":205,"column_start":12,"column_end":20},"name":"keys_raw","qualname":"<IndexedSnapshotMap>::keys_raw","value":"pub fn keys_raw<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                    cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = Vec<u8>> + 'c>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":75933,"byte_end":75943,"line_start":223,"line_end":223,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<IndexedSnapshotMap>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix) -> Prefix<K::SuperSuffix, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":76069,"byte_end":76075,"line_start":227,"line_end":227,"column_start":12,"column_end":18},"name":"prefix","qualname":"<IndexedSnapshotMap>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<K::Suffix, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":76806,"byte_end":76818,"line_start":245,"line_end":245,"column_start":12,"column_end":24},"name":"prefix_range","qualname":"<IndexedSnapshotMap>::prefix_range","value":"pub fn prefix_range<'c>(&Self, &'c dyn Storage, Option<PrefixBound>,\n                        Option<PrefixBound>, cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'c> where T: 'c,\n'a:'c, K: 'c, K::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" While `range` over a `prefix` fixes the prefix to one element and iterates over the\n remaining, `prefix_range` accepts bounds for the lowest and highest elements of the\n `Prefix` itself, and iterates over those (inclusively or exclusively, depending on\n `PrefixBound`).\n There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't\n solve them.\n","sig":null,"attributes":[{"value":"/ While `range` over a `prefix` fixes the prefix to one element and iterates over the","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":76381,"byte_end":76468,"line_start":239,"line_end":239,"column_start":5,"column_end":92}},{"value":"/ remaining, `prefix_range` accepts bounds for the lowest and highest elements of the","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":76473,"byte_end":76560,"line_start":240,"line_end":240,"column_start":5,"column_end":92}},{"value":"/ `Prefix` itself, and iterates over those (inclusively or exclusively, depending on","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":76565,"byte_end":76651,"line_start":241,"line_end":241,"column_start":5,"column_end":91}},{"value":"/ `PrefixBound`).","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":76656,"byte_end":76675,"line_start":242,"line_end":242,"column_start":5,"column_end":24}},{"value":"/ There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":76680,"byte_end":76774,"line_start":243,"line_end":243,"column_start":5,"column_end":99}},{"value":"/ solve them.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":76779,"byte_end":76794,"line_start":244,"line_end":244,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":77334,"byte_end":77339,"line_start":263,"line_end":263,"column_start":12,"column_end":17},"name":"range","qualname":"<IndexedSnapshotMap>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                 cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'c> where T: 'c,\nK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":77682,"byte_end":77686,"line_start":277,"line_end":277,"column_start":12,"column_end":16},"name":"keys","qualname":"<IndexedSnapshotMap>::keys","value":"pub fn keys<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<K::Output>> + 'c> where T: 'c,\nK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":479},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":106065,"byte_end":106075,"line_start":26,"line_end":26,"column_start":12,"column_end":22},"name":"MultiIndex","qualname":"::indexes::multi::MultiIndex","value":"MultiIndex {  }","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488}],"decl_id":null,"docs":" MultiIndex stores (namespace, index_name, idx_value, pk) -> b\"pk_len\".\n Allows many values per index, and references pk.\n The associated primary key value is stored in the main (pk_namespace) map,\n which stores (namespace, pk_namespace, pk) -> value.","sig":null,"attributes":[{"value":"/ MultiIndex stores (namespace, index_name, idx_value, pk) -> b\"pk_len\".","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":105554,"byte_end":105628,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ Allows many values per index, and references pk.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":105629,"byte_end":105681,"line_start":18,"line_end":18,"column_start":1,"column_end":53}},{"value":"/ The associated primary key value is stored in the main (pk_namespace) map,","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":105682,"byte_end":105760,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ which stores (namespace, pk_namespace, pk) -> value.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":105761,"byte_end":105817,"line_start":20,"line_end":20,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":105818,"byte_end":105821,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The stored pk_len is used to recover the pk from the index namespace, and perform","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":105822,"byte_end":105907,"line_start":22,"line_end":22,"column_start":1,"column_end":86}},{"value":"/ the secondary load of the associated value from the main map.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":105908,"byte_end":105973,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":105974,"byte_end":105977,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The (optional) PK type defines the type of Primary Key deserialization.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":105978,"byte_end":106053,"line_start":25,"line_end":25,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":107142,"byte_end":107145,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"new","qualname":"<MultiIndex>::new","value":"pub fn new(fn(: &T) -> IK, &'a str, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new MultiIndex","sig":null,"attributes":[{"value":"/ Create a new MultiIndex","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":106488,"byte_end":106515,"line_start":40,"line_end":40,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":106520,"byte_end":106523,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ idx_fn - lambda creating index key from value","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":106528,"byte_end":106577,"line_start":42,"line_end":42,"column_start":5,"column_end":54}},{"value":"/ pk_namespace - prefix for the primary key","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":106582,"byte_end":106627,"line_start":43,"line_end":43,"column_start":5,"column_end":50}},{"value":"/ idx_namespace - prefix for the index value","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":106632,"byte_end":106678,"line_start":44,"line_end":44,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":106683,"byte_end":106686,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ ## Example:","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":106691,"byte_end":106706,"line_start":46,"line_end":46,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":106711,"byte_end":106714,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":106719,"byte_end":106730,"line_start":48,"line_end":48,"column_start":5,"column_end":16}},{"value":"/ use cw_storage_plus::MultiIndex;","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":106735,"byte_end":106771,"line_start":49,"line_end":49,"column_start":5,"column_end":41}},{"value":"/ use serde::{Deserialize, Serialize};","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":106776,"byte_end":106816,"line_start":50,"line_end":50,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":106821,"byte_end":106824,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ #[derive(Deserialize, Serialize, Clone)]","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":106829,"byte_end":106873,"line_start":52,"line_end":52,"column_start":5,"column_end":49}},{"value":"/ struct Data {","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":106878,"byte_end":106895,"line_start":53,"line_end":53,"column_start":5,"column_end":22}},{"value":"/     pub name: String,","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":106900,"byte_end":106925,"line_start":54,"line_end":54,"column_start":5,"column_end":30}},{"value":"/     pub age: u32,","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":106930,"byte_end":106951,"line_start":55,"line_end":55,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":106956,"byte_end":106961,"line_start":56,"line_end":56,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":106966,"byte_end":106969,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let index: MultiIndex<_, _, String> = MultiIndex::new(","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":106974,"byte_end":107032,"line_start":58,"line_end":58,"column_start":5,"column_end":63}},{"value":"/     |d: &Data| d.age,","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":107037,"byte_end":107062,"line_start":59,"line_end":59,"column_start":5,"column_end":30}},{"value":"/     \"age\",","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":107067,"byte_end":107081,"line_start":60,"line_end":60,"column_start":5,"column_end":19}},{"value":"/     \"age__owner\",","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":107086,"byte_end":107107,"line_start":61,"line_end":61,"column_start":5,"column_end":26}},{"value":"/ );","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":107112,"byte_end":107118,"line_start":62,"line_end":62,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":107123,"byte_end":107130,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":109911,"byte_end":109920,"line_start":163,"line_end":163,"column_start":12,"column_end":21},"name":"index_key","qualname":"<MultiIndex>::index_key","value":"pub fn index_key(&Self, IK) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":111038,"byte_end":111047,"line_start":198,"line_end":198,"column_start":12,"column_end":21},"name":"range_raw","qualname":"<MultiIndex>::range_raw","value":"pub fn range_raw<'c>(&'c Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                     Order)\n-> Box<dyn Iterator<Item = StdResult<Record<T>>> + 'c> where T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":111354,"byte_end":111362,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"keys_raw","qualname":"<MultiIndex>::keys_raw","value":"pub fn keys_raw<'c>(&'c Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                    Order) -> Box<dyn Iterator<Item = Vec<u8>> + 'c>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":112052,"byte_end":112068,"line_start":227,"line_end":227,"column_start":12,"column_end":28},"name":"prefix_range_raw","qualname":"<MultiIndex>::prefix_range_raw","value":"pub fn prefix_range_raw<'c>(&'c Self, &'c dyn Storage, Option<PrefixBound>,\n                            Option<PrefixBound>, cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Record<T>>> + 'c> where\nT: 'c, 'a:'c","parent":null,"children":[],"decl_id":null,"docs":" While `range_raw` over a `prefix` fixes the prefix to one element and iterates over the\n remaining, `prefix_range_raw` accepts bounds for the lowest and highest elements of the\n `Prefix` itself, and iterates over those (inclusively or exclusively, depending on\n `PrefixBound`).\n There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't\n solve them.\n","sig":null,"attributes":[{"value":"/ While `range_raw` over a `prefix` fixes the prefix to one element and iterates over the","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":111619,"byte_end":111710,"line_start":221,"line_end":221,"column_start":5,"column_end":96}},{"value":"/ remaining, `prefix_range_raw` accepts bounds for the lowest and highest elements of the","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":111715,"byte_end":111806,"line_start":222,"line_end":222,"column_start":5,"column_end":96}},{"value":"/ `Prefix` itself, and iterates over those (inclusively or exclusively, depending on","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":111811,"byte_end":111897,"line_start":223,"line_end":223,"column_start":5,"column_end":91}},{"value":"/ `PrefixBound`).","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":111902,"byte_end":111921,"line_start":224,"line_end":224,"column_start":5,"column_end":24}},{"value":"/ There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":111926,"byte_end":112020,"line_start":225,"line_end":225,"column_start":5,"column_end":99}},{"value":"/ solve them.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":112025,"byte_end":112040,"line_start":226,"line_end":226,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":112789,"byte_end":112795,"line_start":251,"line_end":251,"column_start":12,"column_end":18},"name":"prefix","qualname":"<MultiIndex>::prefix","value":"pub fn prefix(&Self, IK) -> Prefix<PK, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":113069,"byte_end":113079,"line_start":261,"line_end":261,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<MultiIndex>::sub_prefix","value":"pub fn sub_prefix(&Self, IK::Prefix) -> Prefix<PK, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":114006,"byte_end":114018,"line_start":285,"line_end":285,"column_start":12,"column_end":24},"name":"prefix_range","qualname":"<MultiIndex>::prefix_range","value":"pub fn prefix_range<'c>(&Self, &'c dyn Storage, Option<PrefixBound>,\n                        Option<PrefixBound>, cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(PK::Output, T)>> + 'c> where T: 'c,\n'a:'c, IK: 'c, PK: 'c, PK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" While `range` over a `prefix` fixes the prefix to one element and iterates over the\n remaining, `prefix_range` accepts bounds for the lowest and highest elements of the\n `Prefix` itself, and iterates over those (inclusively or exclusively, depending on\n `PrefixBound`).\n There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't\n solve them.\n","sig":null,"attributes":[{"value":"/ While `range` over a `prefix` fixes the prefix to one element and iterates over the","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":113581,"byte_end":113668,"line_start":279,"line_end":279,"column_start":5,"column_end":92}},{"value":"/ remaining, `prefix_range` accepts bounds for the lowest and highest elements of the","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":113673,"byte_end":113760,"line_start":280,"line_end":280,"column_start":5,"column_end":92}},{"value":"/ `Prefix` itself, and iterates over those (inclusively or exclusively, depending on","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":113765,"byte_end":113851,"line_start":281,"line_end":281,"column_start":5,"column_end":91}},{"value":"/ `PrefixBound`).","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":113856,"byte_end":113875,"line_start":282,"line_end":282,"column_start":5,"column_end":24}},{"value":"/ There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":113880,"byte_end":113974,"line_start":283,"line_end":283,"column_start":5,"column_end":99}},{"value":"/ solve them.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":113979,"byte_end":113994,"line_start":284,"line_end":284,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":114541,"byte_end":114546,"line_start":304,"line_end":304,"column_start":12,"column_end":17},"name":"range","qualname":"<MultiIndex>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                 cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(PK::Output, T)>> + 'c> where T: 'c,\nPK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":114891,"byte_end":114895,"line_start":318,"line_end":318,"column_start":12,"column_end":16},"name":"keys","qualname":"<MultiIndex>::keys","value":"pub fn keys<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<PK::Output>> + 'c> where T: 'c,\nPK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":620},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":116482,"byte_end":116493,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"UniqueIndex","qualname":"::indexes::unique::UniqueIndex","value":"UniqueIndex {  }","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628}],"decl_id":null,"docs":" UniqueIndex stores (namespace, index_name, idx_value) -> {key, value}\n Allows one value per index (i.e. unique) and copies pk and data\n The optional PK type defines the type of Primary Key deserialization.\n","sig":null,"attributes":[{"value":"/ UniqueIndex stores (namespace, index_name, idx_value) -> {key, value}","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":116255,"byte_end":116328,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ Allows one value per index (i.e. unique) and copies pk and data","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":116329,"byte_end":116396,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/ The optional PK type defines the type of Primary Key deserialization.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":116397,"byte_end":116470,"line_start":27,"line_end":27,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":117168,"byte_end":117171,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"new","qualname":"<UniqueIndex>::new","value":"pub fn new(fn(: &T) -> IK, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new UniqueIndex","sig":null,"attributes":[{"value":"/ Create a new UniqueIndex","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":116730,"byte_end":116758,"line_start":37,"line_end":37,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":116763,"byte_end":116766,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ idx_fn - lambda creating index key from index value","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":116771,"byte_end":116826,"line_start":39,"line_end":39,"column_start":5,"column_end":60}},{"value":"/ idx_namespace - prefix for the index value","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":116831,"byte_end":116877,"line_start":40,"line_end":40,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":116882,"byte_end":116885,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ ## Example:","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":116890,"byte_end":116905,"line_start":42,"line_end":42,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":116910,"byte_end":116913,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":116918,"byte_end":116929,"line_start":44,"line_end":44,"column_start":5,"column_end":16}},{"value":"/ use cw_storage_plus::UniqueIndex;","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":116934,"byte_end":116971,"line_start":45,"line_end":45,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":116976,"byte_end":116979,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ struct Data {","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":116984,"byte_end":117001,"line_start":47,"line_end":47,"column_start":5,"column_end":22}},{"value":"/     pub name: String,","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":117006,"byte_end":117031,"line_start":48,"line_end":48,"column_start":5,"column_end":30}},{"value":"/     pub age: u32,","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":117036,"byte_end":117057,"line_start":49,"line_end":49,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":117062,"byte_end":117067,"line_start":50,"line_end":50,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":117072,"byte_end":117075,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ UniqueIndex::<_, _, ()>::new(|d: &Data| d.age, \"data__age\");","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":117080,"byte_end":117144,"line_start":52,"line_end":52,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":117149,"byte_end":117156,"line_start":53,"line_end":53,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":118889,"byte_end":118898,"line_start":111,"line_end":111,"column_start":12,"column_end":21},"name":"index_key","qualname":"<UniqueIndex>::index_key","value":"pub fn index_key(&Self, IK) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":119330,"byte_end":119334,"line_start":126,"line_end":126,"column_start":12,"column_end":16},"name":"item","qualname":"<UniqueIndex>::item","value":"pub fn item(&Self, &dyn Storage, IK) -> StdResult<Option<Record<T>>>","parent":null,"children":[],"decl_id":null,"docs":" returns all items that match this secondary index, always by pk Ascending\n","sig":null,"attributes":[{"value":"/ returns all items that match this secondary index, always by pk Ascending","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":119241,"byte_end":119318,"line_start":125,"line_end":125,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":119908,"byte_end":119917,"line_start":143,"line_end":143,"column_start":12,"column_end":21},"name":"range_raw","qualname":"<UniqueIndex>::range_raw","value":"pub fn range_raw<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                     Order)\n-> Box<dyn Iterator<Item = StdResult<Record<T>>> + 'c> where T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":120221,"byte_end":120229,"line_start":156,"line_end":156,"column_start":12,"column_end":20},"name":"keys_raw","qualname":"<UniqueIndex>::keys_raw","value":"pub fn keys_raw<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                    Order) -> Box<dyn Iterator<Item = Vec<u8>> + 'c>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":121104,"byte_end":121116,"line_start":180,"line_end":180,"column_start":12,"column_end":24},"name":"prefix_range","qualname":"<UniqueIndex>::prefix_range","value":"pub fn prefix_range<'c>(&Self, &'c dyn Storage, Option<PrefixBound>,\n                        Option<PrefixBound>, cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(PK::Output, T)>> + 'c> where T: 'c,\n'a:'c, IK: 'c, PK: 'c, PK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" While `range` over a `prefix` fixes the prefix to one element and iterates over the\n remaining, `prefix_range` accepts bounds for the lowest and highest elements of the\n `Prefix` itself, and iterates over those (inclusively or exclusively, depending on\n `PrefixBound`).\n There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't\n solve them.\n","sig":null,"attributes":[{"value":"/ While `range` over a `prefix` fixes the prefix to one element and iterates over the","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":120679,"byte_end":120766,"line_start":174,"line_end":174,"column_start":5,"column_end":92}},{"value":"/ remaining, `prefix_range` accepts bounds for the lowest and highest elements of the","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":120771,"byte_end":120858,"line_start":175,"line_end":175,"column_start":5,"column_end":92}},{"value":"/ `Prefix` itself, and iterates over those (inclusively or exclusively, depending on","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":120863,"byte_end":120949,"line_start":176,"line_end":176,"column_start":5,"column_end":91}},{"value":"/ `PrefixBound`).","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":120954,"byte_end":120973,"line_start":177,"line_end":177,"column_start":5,"column_end":24}},{"value":"/ There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":120978,"byte_end":121072,"line_start":178,"line_end":178,"column_start":5,"column_end":99}},{"value":"/ solve them.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":121077,"byte_end":121092,"line_start":179,"line_end":179,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":121655,"byte_end":121660,"line_start":199,"line_end":199,"column_start":12,"column_end":17},"name":"range","qualname":"<UniqueIndex>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                 cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(PK::Output, T)>> + 'c> where T: 'c,\nPK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":122005,"byte_end":122009,"line_start":213,"line_end":213,"column_start":12,"column_end":16},"name":"keys","qualname":"<UniqueIndex>::keys","value":"pub fn keys<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<PK::Output>> + 'c> where T: 'c,\nPK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":122348,"byte_end":122354,"line_start":227,"line_end":227,"column_start":12,"column_end":18},"name":"prefix","qualname":"<UniqueIndex>::prefix","value":"pub fn prefix(&Self, IK::Prefix) -> Prefix<PK, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":122654,"byte_end":122664,"line_start":237,"line_end":237,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<UniqueIndex>::sub_prefix","value":"pub fn sub_prefix(&Self, IK::SubPrefix) -> Prefix<PK, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":707},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/mod.rs","byte_start":104278,"byte_end":104290,"line_start":14,"line_end":14,"column_start":8,"column_end":20},"name":"index_string","qualname":"::indexes::index_string","value":"pub fn index_string(&str) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":708},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/mod.rs","byte_start":104355,"byte_end":104366,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"index_tuple","qualname":"::indexes::index_tuple","value":"pub fn index_tuple(&str, u32) -> (Vec<u8>, u32)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":709},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/mod.rs","byte_start":104449,"byte_end":104461,"line_start":22,"line_end":22,"column_start":8,"column_end":20},"name":"index_triple","qualname":"::indexes::index_triple","value":"pub fn index_triple(&str, u32, Vec<u8>) -> (Vec<u8>, u32, Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":710},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/mod.rs","byte_start":104570,"byte_end":104588,"line_start":26,"line_end":26,"column_start":8,"column_end":26},"name":"index_string_tuple","qualname":"::indexes::index_string_tuple","value":"pub fn index_string_tuple(&str, &str) -> (Vec<u8>, Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":711},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/mod.rs","byte_start":104818,"byte_end":104823,"line_start":32,"line_end":32,"column_start":11,"column_end":16},"name":"Index","qualname":"::indexes::Index","value":"Index<T>","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":714}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/mod.rs","byte_start":104887,"byte_end":104891,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"save","qualname":"::indexes::Index::save","value":"pub fn save(&Self, &mut dyn Storage, &[u8], &T) -> StdResult<()>","parent":{"krate":0,"index":711},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/mod.rs","byte_start":104970,"byte_end":104976,"line_start":37,"line_end":37,"column_start":8,"column_end":14},"name":"remove","qualname":"::indexes::Index::remove","value":"pub fn remove(&Self, &mut dyn Storage, &[u8], &T) -> StdResult<()>","parent":{"krate":0,"index":711},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":719},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/int_key.rs","byte_start":123622,"byte_end":123630,"line_start":8,"line_end":8,"column_start":11,"column_end":19},"name":"CwIntKey","qualname":"::int_key::CwIntKey","value":"CwIntKey: Sized + Copy","parent":null,"children":[{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722}],"decl_id":null,"docs":" Our int keys are simply the big-endian representation bytes for unsigned ints,\n but \"sign-flipped\" (xored msb) big-endian bytes for signed ints.","sig":null,"attributes":[{"value":"/ Our int keys are simply the big-endian representation bytes for unsigned ints,","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/int_key.rs","byte_start":123255,"byte_end":123337,"line_start":3,"line_end":3,"column_start":1,"column_end":83}},{"value":"/ but \"sign-flipped\" (xored msb) big-endian bytes for signed ints.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/int_key.rs","byte_start":123338,"byte_end":123406,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/int_key.rs","byte_start":123407,"byte_end":123410,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ So that the representation of signed integers is in the right lexicographical order.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/int_key.rs","byte_start":123411,"byte_end":123499,"line_start":6,"line_end":6,"column_start":1,"column_end":89}}]},{"kind":"Type","id":{"krate":0,"index":720},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/int_key.rs","byte_start":123656,"byte_end":123659,"line_start":9,"line_end":9,"column_start":10,"column_end":13},"name":"Buf","qualname":"::int_key::CwIntKey::Buf","value":"type Buf: AsRef<[u8]> + AsMut<[u8]> + Into<Vec<u8>> + Default;","parent":{"krate":0,"index":719},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/int_key.rs","byte_start":123722,"byte_end":123733,"line_start":11,"line_end":11,"column_start":8,"column_end":19},"name":"to_cw_bytes","qualname":"::int_key::CwIntKey::to_cw_bytes","value":"pub fn to_cw_bytes(&Self) -> Self::Buf","parent":{"krate":0,"index":719},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/int_key.rs","byte_start":123762,"byte_end":123775,"line_start":12,"line_end":12,"column_start":8,"column_end":21},"name":"from_cw_bytes","qualname":"::int_key::CwIntKey::from_cw_bytes","value":"pub fn from_cw_bytes(Self::Buf) -> Self","parent":{"krate":0,"index":719},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":764},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/item.rs","byte_start":127497,"byte_end":127501,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Item","qualname":"::item::Item","value":"Item {  }","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":768}],"decl_id":null,"docs":" Item stores one typed item at the given key.\n This is an analog of Singleton.\n It functions just as Path but doesn't ue a Vec and thus has a const fn constructor.\n","sig":null,"attributes":[{"value":"/ Item stores one typed item at the given key.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/item.rs","byte_start":127313,"byte_end":127361,"line_start":9,"line_end":9,"column_start":1,"column_end":49}},{"value":"/ This is an analog of Singleton.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/item.rs","byte_start":127362,"byte_end":127397,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"/ It functions just as Path but doesn't ue a Vec and thus has a const fn constructor.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/item.rs","byte_start":127398,"byte_end":127485,"line_start":11,"line_end":11,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/item.rs","byte_start":127811,"byte_end":127814,"line_start":20,"line_end":20,"column_start":18,"column_end":21},"name":"new","qualname":"<Item>::new","value":"pub const fn new(&'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/item.rs","byte_start":128101,"byte_end":128109,"line_start":33,"line_end":33,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Item>::as_slice","value":"pub fn as_slice(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/item.rs","byte_start":128261,"byte_end":128265,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"save","qualname":"<Item>::save","value":"pub fn save(&Self, &mut dyn Storage, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/item.rs","byte_start":128164,"byte_end":128249,"line_start":37,"line_end":37,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/item.rs","byte_start":128413,"byte_end":128419,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"name":"remove","qualname":"<Item>::remove","value":"pub fn remove(&Self, &mut dyn Storage)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/item.rs","byte_start":128600,"byte_end":128604,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"load","qualname":"<Item>::load","value":"pub fn load(&Self, &dyn Storage) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/item.rs","byte_start":128505,"byte_end":128588,"line_start":47,"line_end":47,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/item.rs","byte_start":128898,"byte_end":128906,"line_start":55,"line_end":55,"column_start":12,"column_end":20},"name":"may_load","qualname":"<Item>::may_load","value":"pub fn may_load(&Self, &dyn Storage) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns `Ok(None)` if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns `Ok(None)` if no data there.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/item.rs","byte_start":128744,"byte_end":128843,"line_start":53,"line_end":53,"column_start":5,"column_end":104}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/item.rs","byte_start":128848,"byte_end":128886,"line_start":54,"line_end":54,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/item.rs","byte_start":129360,"byte_end":129366,"line_start":65,"line_end":65,"column_start":12,"column_end":18},"name":"update","qualname":"<Item>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, A) -> Result<T, E> where\nA: FnOnce(T) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/item.rs","byte_start":129053,"byte_end":129123,"line_start":60,"line_end":60,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/item.rs","byte_start":129128,"byte_end":129214,"line_start":61,"line_end":61,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/item.rs","byte_start":129219,"byte_end":129222,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ It assumes, that data was initialized before, and if it doesn't exist, `Err(StdError::NotFound)`","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/item.rs","byte_start":129227,"byte_end":129327,"line_start":63,"line_end":63,"column_start":5,"column_end":105}},{"value":"/ is returned.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/item.rs","byte_start":129332,"byte_end":129348,"line_start":64,"line_end":64,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/item.rs","byte_start":129926,"byte_end":129931,"line_start":80,"line_end":80,"column_start":12,"column_end":17},"name":"query","qualname":"<Item>::query","value":"pub fn query(&Self, &QuerierWrapper, Addr) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" If you import the proper Item from the remote contract, this will let you read the data\n from a remote contract in a type-safe way using WasmQuery::RawQuery.","sig":null,"attributes":[{"value":"/ If you import the proper Item from the remote contract, this will let you read the data","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/item.rs","byte_start":129655,"byte_end":129746,"line_start":76,"line_end":76,"column_start":5,"column_end":96}},{"value":"/ from a remote contract in a type-safe way using WasmQuery::RawQuery.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/item.rs","byte_start":129751,"byte_end":129823,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/item.rs","byte_start":129828,"byte_end":129831,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Note that we expect an Item to be set, and error if there is no data there","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/item.rs","byte_start":129836,"byte_end":129914,"line_start":79,"line_end":79,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1989},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":144772,"byte_end":144775,"line_start":14,"line_end":14,"column_start":5,"column_end":8},"name":"Ref","qualname":"::keys::Key::Ref","value":"Key::Ref(&'a [u8])","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1992},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":144791,"byte_end":144795,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Val8","qualname":"::keys::Key::Val8","value":"Key::Val8([u8; ])","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1996},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":144810,"byte_end":144815,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"name":"Val16","qualname":"::keys::Key::Val16","value":"Key::Val16([u8; ])","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2000},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":144830,"byte_end":144835,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Val32","qualname":"::keys::Key::Val32","value":"Key::Val32([u8; ])","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2004},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":144850,"byte_end":144855,"line_start":18,"line_end":18,"column_start":5,"column_end":10},"name":"Val64","qualname":"::keys::Key::Val64","value":"Key::Val64([u8; ])","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1987},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":144758,"byte_end":144761,"line_start":13,"line_end":13,"column_start":10,"column_end":13},"name":"Key","qualname":"::keys::Key","value":"pub enum Key<'a> {\n    Ref(&'a [u8]),\n    Val8([u8; ]),\n    Val16([u8; ]),\n    Val32([u8; ]),\n    Val64([u8; ]),\n}","parent":null,"children":[{"krate":0,"index":1989},{"krate":0,"index":1992},{"krate":0,"index":1996},{"krate":0,"index":2000},{"krate":0,"index":2004}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":842},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":146070,"byte_end":146080,"line_start":58,"line_end":58,"column_start":11,"column_end":21},"name":"PrimaryKey","qualname":"::keys::PrimaryKey","value":"PrimaryKey<'a>: Clone","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850}],"decl_id":null,"docs":" `PrimaryKey` needs to be implemented for types that want to be a `Map` (or `Map`-like) key,\n or part of a key.","sig":null,"attributes":[{"value":"/ `PrimaryKey` needs to be implemented for types that want to be a `Map` (or `Map`-like) key,","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":145256,"byte_end":145351,"line_start":39,"line_end":39,"column_start":1,"column_end":96}},{"value":"/ or part of a key.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":145352,"byte_end":145373,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":145374,"byte_end":145377,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ In particular, it defines a series of types that help iterating over parts of a (composite) key:","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":145378,"byte_end":145478,"line_start":42,"line_end":42,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":145479,"byte_end":145482,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ `Prefix`: Prefix is eager. That is, except for empty keys, it's always \"one less\" than the full key.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":145483,"byte_end":145587,"line_start":44,"line_end":44,"column_start":1,"column_end":105}},{"value":"/ `Suffix`: Suffix is the complement of prefix.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":145588,"byte_end":145637,"line_start":45,"line_end":45,"column_start":1,"column_end":50}},{"value":"/ `SubPrefix`: Sub-prefix is \"one less\" than prefix.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":145638,"byte_end":145692,"line_start":46,"line_end":46,"column_start":1,"column_end":55}},{"value":"/ `SuperSuffix`: Super-suffix is \"one more\" than suffix. The complement of sub-prefix.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":145693,"byte_end":145781,"line_start":47,"line_end":47,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":145782,"byte_end":145785,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ By example, for a 2-tuple `(T, U)`:","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":145786,"byte_end":145825,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":145826,"byte_end":145829,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ `T`: Prefix.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":145830,"byte_end":145846,"line_start":51,"line_end":51,"column_start":1,"column_end":17}},{"value":"/ `U`: Suffix.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":145847,"byte_end":145863,"line_start":52,"line_end":52,"column_start":1,"column_end":17}},{"value":"/ `()`: Sub-prefix.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":145864,"byte_end":145885,"line_start":53,"line_end":53,"column_start":1,"column_end":22}},{"value":"/ `(T, U)`: Super-suffix.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":145886,"byte_end":145913,"line_start":54,"line_end":54,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":145914,"byte_end":145917,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ `SubPrefix` and `SuperSuffix` only make real sense in the case of triples. Still, they need to be","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":145918,"byte_end":146019,"line_start":56,"line_end":56,"column_start":1,"column_end":102}},{"value":"/ consistently defined for all types.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":146020,"byte_end":146059,"line_start":57,"line_end":57,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":844},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":146280,"byte_end":146286,"line_start":61,"line_end":61,"column_start":10,"column_end":16},"name":"Prefix","qualname":"::keys::PrimaryKey::Prefix","value":"type Prefix: Prefixer<'a>;","parent":{"krate":0,"index":842},"children":[],"decl_id":null,"docs":" These associated types need to implement `Prefixer`, so that they can be useful arguments\n for `prefix()`, `sub_prefix()`, and their key-deserializable variants.\n","sig":null,"attributes":[{"value":"/ These associated types need to implement `Prefixer`, so that they can be useful arguments","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":146098,"byte_end":146191,"line_start":59,"line_end":59,"column_start":5,"column_end":98}},{"value":"/ for `prefix()`, `sub_prefix()`, and their key-deserializable variants.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":146196,"byte_end":146270,"line_start":60,"line_end":60,"column_start":5,"column_end":79}}]},{"kind":"Type","id":{"krate":0,"index":845},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":146311,"byte_end":146320,"line_start":62,"line_end":62,"column_start":10,"column_end":19},"name":"SubPrefix","qualname":"::keys::PrimaryKey::SubPrefix","value":"type SubPrefix: Prefixer<'a>;","parent":{"krate":0,"index":842},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":846},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":146481,"byte_end":146487,"line_start":66,"line_end":66,"column_start":10,"column_end":16},"name":"Suffix","qualname":"::keys::PrimaryKey::Suffix","value":"type Suffix: KeyDeserialize;","parent":{"krate":0,"index":842},"children":[],"decl_id":null,"docs":" These associated types need to implement `KeyDeserialize`, so that they can be returned from\n `range_de()` and friends.\n","sig":null,"attributes":[{"value":"/ These associated types need to implement `KeyDeserialize`, so that they can be returned from","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":146341,"byte_end":146437,"line_start":64,"line_end":64,"column_start":5,"column_end":101}},{"value":"/ `range_de()` and friends.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":146442,"byte_end":146471,"line_start":65,"line_end":65,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":847},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":146514,"byte_end":146525,"line_start":67,"line_end":67,"column_start":10,"column_end":21},"name":"SuperSuffix","qualname":"::keys::PrimaryKey::SuperSuffix","value":"type SuperSuffix: KeyDeserialize;","parent":{"krate":0,"index":842},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":146622,"byte_end":146625,"line_start":70,"line_end":70,"column_start":8,"column_end":11},"name":"key","qualname":"::keys::PrimaryKey::key","value":"pub fn key(&Self) -> Vec<Key>","parent":{"krate":0,"index":842},"children":[],"decl_id":null,"docs":" returns a slice of key steps, which can be optionally combined\n","sig":null,"attributes":[{"value":"/ returns a slice of key steps, which can be optionally combined","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":146548,"byte_end":146614,"line_start":69,"line_end":69,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":146654,"byte_end":146664,"line_start":72,"line_end":72,"column_start":8,"column_end":18},"name":"joined_key","qualname":"::keys::PrimaryKey::joined_key","value":"pub fn joined_key(&Self) -> Vec<u8>","parent":{"krate":0,"index":842},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":146904,"byte_end":146920,"line_start":81,"line_end":81,"column_start":8,"column_end":24},"name":"joined_extra_key","qualname":"::keys::PrimaryKey::joined_extra_key","value":"pub fn joined_extra_key(&Self, &[u8]) -> Vec<u8>","parent":{"krate":0,"index":842},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":891},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":148874,"byte_end":148882,"line_start":161,"line_end":161,"column_start":11,"column_end":19},"name":"Prefixer","qualname":"::keys::Prefixer","value":"Prefixer<'a>","parent":null,"children":[{"krate":0,"index":893},{"krate":0,"index":894}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":149000,"byte_end":149006,"line_start":163,"line_end":163,"column_start":8,"column_end":14},"name":"prefix","qualname":"::keys::Prefixer::prefix","value":"pub fn prefix(&Self) -> Vec<Key>","parent":{"krate":0,"index":891},"children":[],"decl_id":null,"docs":" returns 0 or more namespaces that should be length-prefixed and concatenated for range searches\n","sig":null,"attributes":[{"value":"/ returns 0 or more namespaces that should be length-prefixed and concatenated for range searches","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":148893,"byte_end":148992,"line_start":162,"line_end":162,"column_start":5,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":149035,"byte_end":149048,"line_start":165,"line_end":165,"column_start":8,"column_end":21},"name":"joined_prefix","qualname":"::keys::Prefixer::joined_prefix","value":"pub fn joined_prefix(&Self) -> Vec<u8>","parent":{"krate":0,"index":891},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":969},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":153048,"byte_end":153053,"line_start":331,"line_end":331,"column_start":10,"column_end":15},"name":"U8Key","qualname":"::keys::U8Key","value":"IntKey<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n             \"It is suggested to use `u8` as key type instead of the `U8Key` wrapper\")","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":152944,"byte_end":153038,"line_start":330,"line_end":330,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":970},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":153174,"byte_end":153180,"line_start":333,"line_end":333,"column_start":10,"column_end":16},"name":"U16Key","qualname":"::keys::U16Key","value":"IntKey<u16>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n             \"It is suggested to use `u16` as key type instead of the `U16Key` wrapper\")","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":153068,"byte_end":153164,"line_start":332,"line_end":332,"column_start":1,"column_end":97}}]},{"kind":"Type","id":{"krate":0,"index":971},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":153302,"byte_end":153308,"line_start":335,"line_end":335,"column_start":10,"column_end":16},"name":"U32Key","qualname":"::keys::U32Key","value":"IntKey<u32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n             \"It is suggested to use `u32` as key type instead of the `U32Key` wrapper\")","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":153196,"byte_end":153292,"line_start":334,"line_end":334,"column_start":1,"column_end":97}}]},{"kind":"Type","id":{"krate":0,"index":972},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":153430,"byte_end":153436,"line_start":337,"line_end":337,"column_start":10,"column_end":16},"name":"U64Key","qualname":"::keys::U64Key","value":"IntKey<u64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n             \"It is suggested to use `u64` as key type instead of the `U64Key` wrapper\")","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":153324,"byte_end":153420,"line_start":336,"line_end":336,"column_start":1,"column_end":97}}]},{"kind":"Type","id":{"krate":0,"index":973},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":153545,"byte_end":153552,"line_start":339,"line_end":339,"column_start":10,"column_end":17},"name":"U128Key","qualname":"::keys::U128Key","value":"IntKey<u128>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n             \"Consider using 64-bit keys instead of the `U128Key` wrapper\")","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":153452,"byte_end":153535,"line_start":338,"line_end":338,"column_start":1,"column_end":84}}]},{"kind":"Type","id":{"krate":0,"index":974},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":153674,"byte_end":153679,"line_start":342,"line_end":342,"column_start":10,"column_end":15},"name":"I8Key","qualname":"::keys::I8Key","value":"IntKey<i8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n             \"It is suggested to use `i8` as key type instead of the `I8Key` wrapper\")","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":153570,"byte_end":153664,"line_start":341,"line_end":341,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":975},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":153800,"byte_end":153806,"line_start":344,"line_end":344,"column_start":10,"column_end":16},"name":"I16Key","qualname":"::keys::I16Key","value":"IntKey<i16>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n             \"It is suggested to use `i16` as key type instead of the `I16Key` wrapper\")","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":153694,"byte_end":153790,"line_start":343,"line_end":343,"column_start":1,"column_end":97}}]},{"kind":"Type","id":{"krate":0,"index":976},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":153928,"byte_end":153934,"line_start":346,"line_end":346,"column_start":10,"column_end":16},"name":"I32Key","qualname":"::keys::I32Key","value":"IntKey<i32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n             \"It is suggested to use `i32` as key type instead of the `I32Key` wrapper\")","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":153822,"byte_end":153918,"line_start":345,"line_end":345,"column_start":1,"column_end":97}}]},{"kind":"Type","id":{"krate":0,"index":977},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":154056,"byte_end":154062,"line_start":348,"line_end":348,"column_start":10,"column_end":16},"name":"I64Key","qualname":"::keys::I64Key","value":"IntKey<i64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n             \"It is suggested to use `i64` as key type instead of the `I64Key` wrapper\")","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":153950,"byte_end":154046,"line_start":347,"line_end":347,"column_start":1,"column_end":97}}]},{"kind":"Type","id":{"krate":0,"index":978},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":154171,"byte_end":154178,"line_start":350,"line_end":350,"column_start":10,"column_end":17},"name":"I128Key","qualname":"::keys::I128Key","value":"IntKey<i128>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n             \"Consider using 64-bit keys instead of the `I128Key` wrapper\")","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":154078,"byte_end":154161,"line_start":349,"line_end":349,"column_start":1,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":2091},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":154617,"byte_end":154623,"line_start":360,"line_end":360,"column_start":12,"column_end":18},"name":"IntKey","qualname":"::keys::IntKey","value":"IntKey { wrapped, data }","parent":null,"children":[{"krate":0,"index":2093},{"krate":0,"index":2094}],"decl_id":null,"docs":" It will cast one-particular int type into a Key via Vec<u8>, ensuring you don't mix up u32 and u64\n You can use new or the from/into pair to build a key from an int:","sig":null,"attributes":[{"value":"/ It will cast one-particular int type into a Key via Vec<u8>, ensuring you don't mix up u32 and u64","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":154196,"byte_end":154298,"line_start":352,"line_end":352,"column_start":1,"column_end":103}},{"value":"/ You can use new or the from/into pair to build a key from an int:","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":154299,"byte_end":154368,"line_start":353,"line_end":353,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":154369,"byte_end":154372,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/   let k = U64Key::new(12345);","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":154373,"byte_end":154406,"line_start":355,"line_end":355,"column_start":1,"column_end":34}},{"value":"/   let k = U32Key::from(12345);","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":154407,"byte_end":154441,"line_start":356,"line_end":356,"column_start":1,"column_end":35}},{"value":"/   let k: U16Key = 12345.into();","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":154442,"byte_end":154477,"line_start":357,"line_end":357,"column_start":1,"column_end":36}},{"value":"deprecated(note =\n             \"It is suggested to use naked int types instead of IntKey wrapper\")","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":154478,"byte_end":154566,"line_start":358,"line_end":358,"column_start":1,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":2093},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":154645,"byte_end":154652,"line_start":361,"line_end":361,"column_start":9,"column_end":16},"name":"wrapped","qualname":"::keys::IntKey::wrapped","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":2091},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2094},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":154671,"byte_end":154675,"line_start":362,"line_end":362,"column_start":9,"column_end":13},"name":"data","qualname":"::keys::IntKey::data","value":"std::marker::PhantomData<T>","parent":{"krate":0,"index":2091},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":154746,"byte_end":154749,"line_start":366,"line_end":366,"column_start":12,"column_end":15},"name":"new","qualname":"<IntKey<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2126},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys_old.rs","byte_start":164389,"byte_end":164398,"line_start":7,"line_end":7,"column_start":12,"column_end":21},"name":"IntKeyOld","qualname":"::keys_old::IntKeyOld","value":"IntKeyOld { wrapped, data }","parent":null,"children":[{"krate":0,"index":2128},{"krate":0,"index":2129}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2128},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys_old.rs","byte_start":164420,"byte_end":164427,"line_start":8,"line_end":8,"column_start":9,"column_end":16},"name":"wrapped","qualname":"::keys_old::IntKeyOld::wrapped","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":2126},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2129},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys_old.rs","byte_start":164446,"byte_end":164450,"line_start":9,"line_end":9,"column_start":9,"column_end":13},"name":"data","qualname":"::keys_old::IntKeyOld::data","value":"std::marker::PhantomData<T>","parent":{"krate":0,"index":2126},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys_old.rs","byte_start":164513,"byte_end":164516,"line_start":13,"line_end":13,"column_start":12,"column_end":15},"name":"new","qualname":"<IntKeyOld<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2147},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":166858,"byte_end":166861,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"Map","qualname":"::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":2151},{"krate":0,"index":2152},{"krate":0,"index":2153}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":167129,"byte_end":167132,"line_start":27,"line_end":27,"column_start":18,"column_end":21},"name":"new","qualname":"<Map>::new","value":"pub const fn new(&'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":167420,"byte_end":167429,"line_start":41,"line_end":41,"column_start":12,"column_end":21},"name":"namespace","qualname":"<Map>::namespace","value":"pub fn namespace(&Self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1129},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":167492,"byte_end":167495,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"key","qualname":"<Map>::key","value":"pub fn key(&Self, K) -> Path<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1131},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":167807,"byte_end":167811,"line_start":57,"line_end":57,"column_start":12,"column_end":16},"name":"save","qualname":"<Map>::save","value":"pub fn save(&Self, &mut dyn Storage, K, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1132},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":167935,"byte_end":167941,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"remove","qualname":"<Map>::remove","value":"pub fn remove(&Self, &mut dyn Storage, K)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1133},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":168122,"byte_end":168126,"line_start":66,"line_end":66,"column_start":12,"column_end":16},"name":"load","qualname":"<Map>::load","value":"pub fn load(&Self, &dyn Storage, K) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":168027,"byte_end":168110,"line_start":65,"line_end":65,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1134},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":168374,"byte_end":168382,"line_start":72,"line_end":72,"column_start":12,"column_end":20},"name":"may_load","qualname":"<Map>::may_load","value":"pub fn may_load(&Self, &dyn Storage, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":168222,"byte_end":168319,"line_start":70,"line_end":70,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":168324,"byte_end":168362,"line_start":71,"line_end":71,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":168613,"byte_end":168616,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"has","qualname":"<Map>::has","value":"pub fn has(&Self, &dyn Storage, K) -> bool","parent":null,"children":[],"decl_id":null,"docs":" has returns true or false if any data is at this key, without parsing or interpreting the\n contents.\n","sig":null,"attributes":[{"value":"/ has returns true or false if any data is at this key, without parsing or interpreting the","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":168490,"byte_end":168583,"line_start":76,"line_end":76,"column_start":5,"column_end":98}},{"value":"/ contents.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":168588,"byte_end":168601,"line_start":77,"line_end":77,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":168981,"byte_end":168987,"line_start":86,"line_end":86,"column_start":12,"column_end":18},"name":"update","qualname":"<Map>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, K, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":168703,"byte_end":168773,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":168778,"byte_end":168864,"line_start":83,"line_end":83,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":168869,"byte_end":168872,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":168877,"byte_end":168969,"line_start":85,"line_end":85,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":169379,"byte_end":169384,"line_start":96,"line_end":96,"column_start":12,"column_end":17},"name":"query","qualname":"<Map>::query","value":"pub fn query(&Self, &QuerierWrapper, Addr, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" If you import the proper Map from the remote contract, this will let you read the data\n from a remote contract in a type-safe way using WasmQuery::RawQuery\n","sig":null,"attributes":[{"value":"/ If you import the proper Map from the remote contract, this will let you read the data","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":169201,"byte_end":169291,"line_start":94,"line_end":94,"column_start":5,"column_end":95}},{"value":"/ from a remote contract in a type-safe way using WasmQuery::RawQuery","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":169296,"byte_end":169367,"line_start":95,"line_end":95,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1144},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":169893,"byte_end":169903,"line_start":118,"line_end":118,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<Map>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix) -> Prefix<K::SuperSuffix, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1145},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":170026,"byte_end":170032,"line_start":122,"line_end":122,"column_start":12,"column_end":18},"name":"prefix","qualname":"<Map>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<K::Suffix, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":170863,"byte_end":170879,"line_start":141,"line_end":141,"column_start":12,"column_end":28},"name":"prefix_range_raw","qualname":"<Map>::prefix_range_raw","value":"pub fn prefix_range_raw<'c>(&Self, &'c dyn Storage, Option<PrefixBound>,\n                            Option<PrefixBound>, cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Record<T>>> + 'c> where\nT: 'c, 'a:'c","parent":null,"children":[],"decl_id":null,"docs":" While `range_raw` over a `prefix` fixes the prefix to one element and iterates over the\n remaining, `prefix_range_raw` accepts bounds for the lowest and highest elements of the `Prefix`\n itself, and iterates over those (inclusively or exclusively, depending on `PrefixBound`).\n There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't\n solve them.\n","sig":null,"attributes":[{"value":"/ While `range_raw` over a `prefix` fixes the prefix to one element and iterates over the","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":170438,"byte_end":170529,"line_start":136,"line_end":136,"column_start":5,"column_end":96}},{"value":"/ remaining, `prefix_range_raw` accepts bounds for the lowest and highest elements of the `Prefix`","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":170534,"byte_end":170634,"line_start":137,"line_end":137,"column_start":5,"column_end":105}},{"value":"/ itself, and iterates over those (inclusively or exclusively, depending on `PrefixBound`).","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":170639,"byte_end":170732,"line_start":138,"line_end":138,"column_start":5,"column_end":98}},{"value":"/ There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":170737,"byte_end":170831,"line_start":139,"line_end":139,"column_start":5,"column_end":99}},{"value":"/ solve them.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":170836,"byte_end":170851,"line_start":140,"line_end":140,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":171348,"byte_end":171357,"line_start":157,"line_end":157,"column_start":12,"column_end":21},"name":"range_raw","qualname":"<Map>::range_raw","value":"pub fn range_raw<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                     cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Record<T>>> + 'c> where\nT: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1154},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":171689,"byte_end":171697,"line_start":170,"line_end":170,"column_start":12,"column_end":20},"name":"keys_raw","qualname":"<Map>::keys_raw","value":"pub fn keys_raw<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                    cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = Vec<u8>> + 'c> where T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":172564,"byte_end":172576,"line_start":196,"line_end":196,"column_start":12,"column_end":24},"name":"prefix_range","qualname":"<Map>::prefix_range","value":"pub fn prefix_range<'c>(&Self, &'c dyn Storage, Option<PrefixBound>,\n                        Option<PrefixBound>, cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'c> where T: 'c,\n'a:'c, K: 'c, K::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" While `range` over a `prefix` fixes the prefix to one element and iterates over the\n remaining, `prefix_range` accepts bounds for the lowest and highest elements of the\n `Prefix` itself, and iterates over those (inclusively or exclusively, depending on\n `PrefixBound`).\n There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't\n solve them.\n","sig":null,"attributes":[{"value":"/ While `range` over a `prefix` fixes the prefix to one element and iterates over the","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":172139,"byte_end":172226,"line_start":190,"line_end":190,"column_start":5,"column_end":92}},{"value":"/ remaining, `prefix_range` accepts bounds for the lowest and highest elements of the","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":172231,"byte_end":172318,"line_start":191,"line_end":191,"column_start":5,"column_end":92}},{"value":"/ `Prefix` itself, and iterates over those (inclusively or exclusively, depending on","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":172323,"byte_end":172409,"line_start":192,"line_end":192,"column_start":5,"column_end":91}},{"value":"/ `PrefixBound`).","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":172414,"byte_end":172433,"line_start":193,"line_end":193,"column_start":5,"column_end":24}},{"value":"/ There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":172438,"byte_end":172532,"line_start":194,"line_end":194,"column_start":5,"column_end":99}},{"value":"/ solve them.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":172537,"byte_end":172552,"line_start":195,"line_end":195,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1162},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":173089,"byte_end":173094,"line_start":214,"line_end":214,"column_start":12,"column_end":17},"name":"range","qualname":"<Map>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                 cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'c> where T: 'c,\nK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":173437,"byte_end":173441,"line_start":228,"line_end":228,"column_start":12,"column_end":16},"name":"keys","qualname":"<Map>::keys","value":"pub fn keys<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<K::Output>> + 'c> where T: 'c,\nK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2164},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/path.rs","byte_start":208640,"byte_end":208644,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Path","qualname":"::path::Path","value":"Path {  }","parent":null,"children":[{"krate":0,"index":2166},{"krate":0,"index":2167}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/path.rs","byte_start":209173,"byte_end":209176,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<Path<T>>::new","value":"pub fn new(&[u8], &[&[u8]]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1214},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/path.rs","byte_start":209727,"byte_end":209731,"line_start":54,"line_end":54,"column_start":12,"column_end":16},"name":"save","qualname":"<Path<T>>::save","value":"pub fn save(&Self, &mut dyn Storage, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/path.rs","byte_start":209630,"byte_end":209715,"line_start":53,"line_end":53,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1215},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/path.rs","byte_start":209880,"byte_end":209886,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"remove","qualname":"<Path<T>>::remove","value":"pub fn remove(&Self, &mut dyn Storage)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1216},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/path.rs","byte_start":210068,"byte_end":210072,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"load","qualname":"<Path<T>>::load","value":"pub fn load(&Self, &dyn Storage) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/path.rs","byte_start":209973,"byte_end":210056,"line_start":63,"line_end":63,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1217},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/path.rs","byte_start":210365,"byte_end":210373,"line_start":71,"line_end":71,"column_start":12,"column_end":20},"name":"may_load","qualname":"<Path<T>>::may_load","value":"pub fn may_load(&Self, &dyn Storage) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/path.rs","byte_start":210213,"byte_end":210310,"line_start":69,"line_end":69,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/path.rs","byte_start":210315,"byte_end":210353,"line_start":70,"line_end":70,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1218},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/path.rs","byte_start":210740,"byte_end":210743,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"has","qualname":"<Path<T>>::has","value":"pub fn has(&Self, &dyn Storage) -> bool","parent":null,"children":[],"decl_id":null,"docs":" has returns true or false if any data is at this key, without parsing or interpreting the\n contents. It will returns true for an length-0 byte array (Some(b\"\")), if you somehow manage to set that.\n","sig":null,"attributes":[{"value":"/ has returns true or false if any data is at this key, without parsing or interpreting the","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/path.rs","byte_start":210521,"byte_end":210614,"line_start":76,"line_end":76,"column_start":5,"column_end":98}},{"value":"/ contents. It will returns true for an length-0 byte array (Some(b\"\")), if you somehow manage to set that.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/path.rs","byte_start":210619,"byte_end":210728,"line_start":77,"line_end":77,"column_start":5,"column_end":114}}]},{"kind":"Method","id":{"krate":0,"index":1219},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/path.rs","byte_start":211118,"byte_end":211124,"line_start":86,"line_end":86,"column_start":12,"column_end":18},"name":"update","qualname":"<Path<T>>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/path.rs","byte_start":210840,"byte_end":210910,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/path.rs","byte_start":210915,"byte_end":211001,"line_start":83,"line_end":83,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/path.rs","byte_start":211006,"byte_end":211009,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/path.rs","byte_start":211014,"byte_end":211106,"line_start":85,"line_end":85,"column_start":5,"column_end":97}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2175},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":212255,"byte_end":212264,"line_start":22,"line_end":22,"column_start":5,"column_end":14},"name":"Inclusive","qualname":"::prefix::Bound::Inclusive","value":"Bound::Inclusive(Vec<u8>)","parent":{"krate":0,"index":2174},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2178},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":212279,"byte_end":212288,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"name":"Exclusive","qualname":"::prefix::Bound::Exclusive","value":"Bound::Exclusive(Vec<u8>)","parent":{"krate":0,"index":2174},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2174},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":212243,"byte_end":212248,"line_start":21,"line_end":21,"column_start":10,"column_end":15},"name":"Bound","qualname":"::prefix::Bound","value":"pub enum Bound { Inclusive(Vec<u8>), Exclusive(Vec<u8>), }","parent":null,"children":[{"krate":0,"index":2175},{"krate":0,"index":2178}],"decl_id":null,"docs":" Bound is used to defines the two ends of a range, more explicit than Option<u8>\n None means that we don't limit that side of the range at all.\n Include means we use the given bytes as a limit and *include* anything at that exact key\n Exclude means we use the given bytes as a limit and *exclude* anything at that exact key\n","sig":null,"attributes":[{"value":"/ Bound is used to defines the two ends of a range, more explicit than Option<u8>","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":211874,"byte_end":211957,"line_start":16,"line_end":16,"column_start":1,"column_end":84}},{"value":"/ None means that we don't limit that side of the range at all.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":211958,"byte_end":212023,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ Include means we use the given bytes as a limit and *include* anything at that exact key","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":212024,"byte_end":212116,"line_start":18,"line_end":18,"column_start":1,"column_end":93}},{"value":"/ Exclude means we use the given bytes as a limit and *exclude* anything at that exact key","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":212117,"byte_end":212209,"line_start":19,"line_end":19,"column_start":1,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1285},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":212408,"byte_end":212417,"line_start":28,"line_end":28,"column_start":12,"column_end":21},"name":"inclusive","qualname":"<Bound>::inclusive","value":"pub fn inclusive<T: Into<Vec<u8>>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turns optional binary, like Option<CanonicalAddr> into an inclusive bound\n","sig":null,"attributes":[{"value":"/ Turns optional binary, like Option<CanonicalAddr> into an inclusive bound","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":212319,"byte_end":212396,"line_start":27,"line_end":27,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1287},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":212595,"byte_end":212604,"line_start":33,"line_end":33,"column_start":12,"column_end":21},"name":"exclusive","qualname":"<Bound>::exclusive","value":"pub fn exclusive<T: Into<Vec<u8>>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turns optional binary, like Option<CanonicalAddr> into an exclusive bound\n","sig":null,"attributes":[{"value":"/ Turns optional binary, like Option<CanonicalAddr> into an exclusive bound","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":212506,"byte_end":212583,"line_start":32,"line_end":32,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":212763,"byte_end":212776,"line_start":38,"line_end":38,"column_start":12,"column_end":25},"name":"inclusive_int","qualname":"<Bound>::inclusive_int","value":"pub fn inclusive_int<T: CwIntKey + Endian>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turns an int, like Option<u32> into an inclusive bound\n","sig":null,"attributes":[{"value":"/ Turns an int, like Option<u32> into an inclusive bound","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":212693,"byte_end":212751,"line_start":37,"line_end":37,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1291},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":212953,"byte_end":212966,"line_start":43,"line_end":43,"column_start":12,"column_end":25},"name":"exclusive_int","qualname":"<Bound>::exclusive_int","value":"pub fn exclusive_int<T: CwIntKey + Endian>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turns an int, like Option<u64> into an exclusive bound\n","sig":null,"attributes":[{"value":"/ Turns an int, like Option<u64> into an exclusive bound","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":212883,"byte_end":212941,"line_start":42,"line_end":42,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2188},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":213143,"byte_end":213152,"line_start":50,"line_end":50,"column_start":5,"column_end":14},"name":"Inclusive","qualname":"::prefix::PrefixBound::Inclusive","value":"PrefixBound::Inclusive((K, PhantomData<&'a bool>))","parent":{"krate":0,"index":2185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2191},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":213186,"byte_end":213195,"line_start":51,"line_end":51,"column_start":5,"column_end":14},"name":"Exclusive","qualname":"::prefix::PrefixBound::Exclusive","value":"PrefixBound::Exclusive((K, PhantomData<&'a bool>))","parent":{"krate":0,"index":2185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2185},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":213104,"byte_end":213115,"line_start":49,"line_end":49,"column_start":10,"column_end":21},"name":"PrefixBound","qualname":"::prefix::PrefixBound","value":"pub enum PrefixBound<'a, K: Prefixer> {\n    Inclusive((K, PhantomData<&'a bool>)),\n    Exclusive((K, PhantomData<&'a bool>)),\n}","parent":null,"children":[{"krate":0,"index":2188},{"krate":0,"index":2191}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1296},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":213286,"byte_end":213295,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"name":"inclusive","qualname":"<PrefixBound>::inclusive","value":"pub fn inclusive<T: Into<K>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1298},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":213391,"byte_end":213400,"line_start":59,"line_end":59,"column_start":12,"column_end":21},"name":"exclusive","qualname":"<PrefixBound>::exclusive","value":"pub fn exclusive<T: Into<K>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1300},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":213496,"byte_end":213504,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"to_bound","qualname":"<PrefixBound>::to_bound","value":"pub fn to_bound(&Self) -> Bound","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2202},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":214306,"byte_end":214312,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"Prefix","qualname":"::prefix::Prefix","value":"Prefix {  }","parent":null,"children":[{"krate":0,"index":2205},{"krate":0,"index":2206},{"krate":0,"index":2207},{"krate":0,"index":2208},{"krate":0,"index":2209}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1319},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":215015,"byte_end":215018,"line_start":124,"line_end":124,"column_start":12,"column_end":15},"name":"new","qualname":"<Prefix<K, T>>::new","value":"pub fn new(&[u8], &[Key]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1320},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":215284,"byte_end":215314,"line_start":134,"line_end":134,"column_start":12,"column_end":42},"name":"with_deserialization_functions","qualname":"<Prefix<K, T>>::with_deserialization_functions","value":"pub fn with_deserialization_functions(&[u8], &[Key], &[u8],\n                                      DeserializeKvFn<K, T>,\n                                      DeserializeVFn<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":215757,"byte_end":215766,"line_start":151,"line_end":151,"column_start":12,"column_end":21},"name":"range_raw","qualname":"<Prefix<K, T>>::range_raw","value":"pub fn range_raw<'a>(&Self, &'a dyn Storage, Option<Bound>, Option<Bound>,\n                     Order)\n-> Box<dyn Iterator<Item = StdResult<Record<T>>> + 'a> where T: 'a","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1324},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":216253,"byte_end":216261,"line_start":168,"line_end":168,"column_start":12,"column_end":20},"name":"keys_raw","qualname":"<Prefix<K, T>>::keys_raw","value":"pub fn keys_raw<'a>(&Self, &'a dyn Storage, Option<Bound>, Option<Bound>,\n                    Order) -> Box<dyn Iterator<Item = Vec<u8>> + 'a>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1327},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":216599,"byte_end":216604,"line_start":180,"line_end":180,"column_start":12,"column_end":17},"name":"range","qualname":"<Prefix<K, T>>::range","value":"pub fn range<'a>(&Self, &'a dyn Storage, Option<Bound>, Option<Bound>, Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'a> where T: 'a,\nK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1330},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":217125,"byte_end":217129,"line_start":198,"line_end":198,"column_start":12,"column_end":16},"name":"keys","qualname":"<Prefix<K, T>>::keys","value":"pub fn keys<'a>(&Self, &'a dyn Storage, Option<Bound>, Option<Bound>, Order)\n-> Box<dyn Iterator<Item = StdResult<K::Output>> + 'a> where T: 'a,\nK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1334},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":217686,"byte_end":217703,"line_start":218,"line_end":218,"column_start":8,"column_end":25},"name":"range_with_prefix","qualname":"::prefix::range_with_prefix","value":"pub fn range_with_prefix<'a>(&'a dyn Storage, &[u8], Option<Bound>,\n                             Option<Bound>, Order)\n-> Box<dyn Iterator<Item = Record> + 'a>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1382},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":240494,"byte_end":240506,"line_start":12,"line_end":12,"column_start":12,"column_end":24},"name":"SnapshotItem","qualname":"::snapshot::item::SnapshotItem","value":"SnapshotItem {  }","parent":null,"children":[{"krate":0,"index":1385},{"krate":0,"index":1386}],"decl_id":null,"docs":" Item that maintains a snapshot of one or more checkpoints.\n We can query historical data as well as current state.\n What data is snapshotted depends on the Strategy.\n","sig":null,"attributes":[{"value":"/ Item that maintains a snapshot of one or more checkpoints.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":240307,"byte_end":240369,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/ We can query historical data as well as current state.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":240370,"byte_end":240428,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/ What data is snapshotted depends on the Strategy.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":240429,"byte_end":240482,"line_start":11,"line_end":11,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":240904,"byte_end":240907,"line_start":29,"line_end":29,"column_start":18,"column_end":21},"name":"new","qualname":"<SnapshotItem>::new","value":"pub const fn new(&'a str, &'a str, &'a str, Strategy) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Example:","sig":null,"attributes":[{"value":"/ Example:","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":240619,"byte_end":240631,"line_start":18,"line_end":18,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":240636,"byte_end":240639,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":240644,"byte_end":240655,"line_start":20,"line_end":20,"column_start":5,"column_end":16}},{"value":"/ use cw_storage_plus::{SnapshotItem, Strategy};","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":240660,"byte_end":240710,"line_start":21,"line_end":21,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":240715,"byte_end":240718,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ SnapshotItem::<'static, u64>::new(","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":240723,"byte_end":240761,"line_start":23,"line_end":23,"column_start":5,"column_end":43}},{"value":"/     \"every\",","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":240766,"byte_end":240782,"line_start":24,"line_end":24,"column_start":5,"column_end":21}},{"value":"/     \"every__check\",","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":240787,"byte_end":240810,"line_start":25,"line_end":25,"column_start":5,"column_end":28}},{"value":"/     \"every__change\",","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":240815,"byte_end":240839,"line_start":26,"line_end":26,"column_start":5,"column_end":29}},{"value":"/     Strategy::EveryBlock);","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":240844,"byte_end":240874,"line_start":27,"line_end":27,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":240879,"byte_end":240886,"line_start":28,"line_end":28,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1391},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":241209,"byte_end":241223,"line_start":41,"line_end":41,"column_start":12,"column_end":26},"name":"add_checkpoint","qualname":"<SnapshotItem>::add_checkpoint","value":"pub fn add_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":241359,"byte_end":241376,"line_start":45,"line_end":45,"column_start":12,"column_end":29},"name":"remove_checkpoint","qualname":"<SnapshotItem>::remove_checkpoint","value":"pub fn remove_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1397},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":242081,"byte_end":242085,"line_start":65,"line_end":65,"column_start":12,"column_end":16},"name":"save","qualname":"<SnapshotItem>::save","value":"pub fn save(&Self, &mut dyn Storage, &T, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1398},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":242333,"byte_end":242339,"line_start":72,"line_end":72,"column_start":12,"column_end":18},"name":"remove","qualname":"<SnapshotItem>::remove","value":"pub fn remove(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":242660,"byte_end":242664,"line_start":81,"line_end":81,"column_start":12,"column_end":16},"name":"load","qualname":"<SnapshotItem>::load","value":"pub fn load(&Self, &dyn Storage) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set, or on parse error","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":242582,"byte_end":242648,"line_start":80,"line_end":80,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":242896,"byte_end":242904,"line_start":87,"line_end":87,"column_start":12,"column_end":20},"name":"may_load","qualname":"<SnapshotItem>::may_load","value":"pub fn may_load(&Self, &dyn Storage) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored if present, returns Ok(None) if no data there.\n returns an error on parsing issues\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored if present, returns Ok(None) if no data there.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":242755,"byte_end":242841,"line_start":85,"line_end":85,"column_start":5,"column_end":91}},{"value":"/ returns an error on parsing issues","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":242846,"byte_end":242884,"line_start":86,"line_end":86,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1401},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":243014,"byte_end":243032,"line_start":91,"line_end":91,"column_start":12,"column_end":30},"name":"may_load_at_height","qualname":"<SnapshotItem>::may_load_at_height","value":"pub fn may_load_at_height(&Self, &dyn Storage, u64) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1402},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":243442,"byte_end":243461,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"assert_checkpointed","qualname":"<SnapshotItem>::assert_checkpointed","value":"pub fn assert_checkpointed(&Self, &dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1403},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":243987,"byte_end":243993,"line_start":113,"line_end":113,"column_start":12,"column_end":18},"name":"update","qualname":"<SnapshotItem>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, u64, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result in the database.\n This is a shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result in the database.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":243591,"byte_end":243678,"line_start":107,"line_end":107,"column_start":5,"column_end":92}},{"value":"/ This is a shorthand for some common sequences, which may be useful.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":243683,"byte_end":243754,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":243759,"byte_end":243762,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":243767,"byte_end":243859,"line_start":110,"line_end":110,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":243864,"byte_end":243867,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This is a bit more customized than needed to only read \"old\" value 1 time, not 2 per naive approach","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":243872,"byte_end":243975,"line_start":112,"line_end":112,"column_start":5,"column_end":108}}]},{"kind":"Struct","id":{"krate":0,"index":1461},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":249871,"byte_end":249882,"line_start":18,"line_end":18,"column_start":12,"column_end":23},"name":"SnapshotMap","qualname":"::snapshot::map::SnapshotMap","value":"SnapshotMap {  }","parent":null,"children":[{"krate":0,"index":1465},{"krate":0,"index":1466}],"decl_id":null,"docs":" Map that maintains a snapshots of one or more checkpoints.\n We can query historical data as well as current state.\n What data is snapshotted depends on the Strategy.\n","sig":null,"attributes":[{"value":"/ Map that maintains a snapshots of one or more checkpoints.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":249684,"byte_end":249746,"line_start":15,"line_end":15,"column_start":1,"column_end":63}},{"value":"/ We can query historical data as well as current state.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":249747,"byte_end":249805,"line_start":16,"line_end":16,"column_start":1,"column_end":59}},{"value":"/ What data is snapshotted depends on the Strategy.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":249806,"byte_end":249859,"line_start":17,"line_end":17,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1471},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":250295,"byte_end":250298,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"name":"new","qualname":"<SnapshotMap>::new","value":"pub const fn new(&'a str, &'a str, &'a str, Strategy) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Example:","sig":null,"attributes":[{"value":"/ Example:","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":250004,"byte_end":250016,"line_start":24,"line_end":24,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":250021,"byte_end":250024,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":250029,"byte_end":250040,"line_start":26,"line_end":26,"column_start":5,"column_end":16}},{"value":"/ use cw_storage_plus::{SnapshotMap, Strategy};","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":250045,"byte_end":250094,"line_start":27,"line_end":27,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":250099,"byte_end":250102,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ SnapshotMap::<&[u8], &str>::new(","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":250107,"byte_end":250143,"line_start":29,"line_end":29,"column_start":5,"column_end":41}},{"value":"/     \"never\",","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":250148,"byte_end":250164,"line_start":30,"line_end":30,"column_start":5,"column_end":21}},{"value":"/     \"never__check\",","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":250169,"byte_end":250192,"line_start":31,"line_end":31,"column_start":5,"column_end":28}},{"value":"/     \"never__change\",","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":250197,"byte_end":250221,"line_start":32,"line_end":32,"column_start":5,"column_end":29}},{"value":"/     Strategy::EveryBlock","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":250226,"byte_end":250254,"line_start":33,"line_end":33,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":250259,"byte_end":250265,"line_start":34,"line_end":34,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":250270,"byte_end":250277,"line_start":35,"line_end":35,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1476},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":250710,"byte_end":250724,"line_start":54,"line_end":54,"column_start":12,"column_end":26},"name":"add_checkpoint","qualname":"<SnapshotMap>::add_checkpoint","value":"pub fn add_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1477},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":250860,"byte_end":250877,"line_start":58,"line_end":58,"column_start":12,"column_end":29},"name":"remove_checkpoint","qualname":"<SnapshotMap>::remove_checkpoint","value":"pub fn remove_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1482},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":251163,"byte_end":251166,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"key","qualname":"<SnapshotMap>::key","value":"pub fn key(&Self, K) -> Path<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1485},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":251845,"byte_end":251849,"line_start":87,"line_end":87,"column_start":12,"column_end":16},"name":"save","qualname":"<SnapshotMap>::save","value":"pub fn save(&Self, &mut dyn Storage, K, &T, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1486},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":252116,"byte_end":252122,"line_start":94,"line_end":94,"column_start":12,"column_end":18},"name":"remove","qualname":"<SnapshotMap>::remove","value":"pub fn remove(&Self, &mut dyn Storage, K, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1487},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":252479,"byte_end":252483,"line_start":103,"line_end":103,"column_start":12,"column_end":16},"name":"load","qualname":"<SnapshotMap>::load","value":"pub fn load(&Self, &dyn Storage, K) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":252384,"byte_end":252467,"line_start":102,"line_end":102,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1488},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":252735,"byte_end":252743,"line_start":109,"line_end":109,"column_start":12,"column_end":20},"name":"may_load","qualname":"<SnapshotMap>::may_load","value":"pub fn may_load(&Self, &dyn Storage, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":252583,"byte_end":252680,"line_start":107,"line_end":107,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":252685,"byte_end":252723,"line_start":108,"line_end":108,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1489},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":252862,"byte_end":252880,"line_start":113,"line_end":113,"column_start":12,"column_end":30},"name":"may_load_at_height","qualname":"<SnapshotMap>::may_load_at_height","value":"pub fn may_load_at_height(&Self, &dyn Storage, K, u64) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1490},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":253287,"byte_end":253306,"line_start":131,"line_end":131,"column_start":12,"column_end":31},"name":"assert_checkpointed","qualname":"<SnapshotMap>::assert_checkpointed","value":"pub fn assert_checkpointed(&Self, &dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1491},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":253830,"byte_end":253836,"line_start":141,"line_end":141,"column_start":12,"column_end":18},"name":"update","qualname":"<SnapshotMap>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, K, u64, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":253436,"byte_end":253506,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":253511,"byte_end":253597,"line_start":136,"line_end":136,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":253602,"byte_end":253605,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":253610,"byte_end":253702,"line_start":138,"line_end":138,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":253707,"byte_end":253710,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ This is a bit more customized than needed to only read \"old\" value 1 time, not 2 per naive approach","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":253715,"byte_end":253818,"line_start":140,"line_end":140,"column_start":5,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":1498},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":254594,"byte_end":254603,"line_start":167,"line_end":167,"column_start":12,"column_end":21},"name":"range_raw","qualname":"<SnapshotMap>::range_raw","value":"pub fn range_raw<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                     cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Record<T>>> + 'c> where\nT: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1500},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":254935,"byte_end":254943,"line_start":180,"line_end":180,"column_start":12,"column_end":20},"name":"keys_raw","qualname":"<SnapshotMap>::keys_raw","value":"pub fn keys_raw<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                    cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = Vec<u8>> + 'c> where T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1506},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":255818,"byte_end":255830,"line_start":206,"line_end":206,"column_start":12,"column_end":24},"name":"prefix_range","qualname":"<SnapshotMap>::prefix_range","value":"pub fn prefix_range<'c>(&Self, &'c dyn Storage, Option<PrefixBound>,\n                        Option<PrefixBound>, cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'c> where T: 'c,\n'a:'c, K: 'c, K::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" While `range` over a `prefix` fixes the prefix to one element and iterates over the\n remaining, `prefix_range` accepts bounds for the lowest and highest elements of the\n `Prefix` itself, and iterates over those (inclusively or exclusively, depending on\n `PrefixBound`).\n There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't\n solve them.\n","sig":null,"attributes":[{"value":"/ While `range` over a `prefix` fixes the prefix to one element and iterates over the","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":255393,"byte_end":255480,"line_start":200,"line_end":200,"column_start":5,"column_end":92}},{"value":"/ remaining, `prefix_range` accepts bounds for the lowest and highest elements of the","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":255485,"byte_end":255572,"line_start":201,"line_end":201,"column_start":5,"column_end":92}},{"value":"/ `Prefix` itself, and iterates over those (inclusively or exclusively, depending on","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":255577,"byte_end":255663,"line_start":202,"line_end":202,"column_start":5,"column_end":91}},{"value":"/ `PrefixBound`).","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":255668,"byte_end":255687,"line_start":203,"line_end":203,"column_start":5,"column_end":24}},{"value":"/ There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":255692,"byte_end":255786,"line_start":204,"line_end":204,"column_start":5,"column_end":99}},{"value":"/ solve them.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":255791,"byte_end":255806,"line_start":205,"line_end":205,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1508},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":256353,"byte_end":256358,"line_start":224,"line_end":224,"column_start":12,"column_end":17},"name":"range","qualname":"<SnapshotMap>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                 cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'c> where T: 'c,\nK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1510},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":256701,"byte_end":256705,"line_start":238,"line_end":238,"column_start":12,"column_end":16},"name":"keys","qualname":"<SnapshotMap>::keys","value":"pub fn keys<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<K::Output>> + 'c> where T: 'c,\nK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1512},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":257042,"byte_end":257048,"line_start":252,"line_end":252,"column_start":12,"column_end":18},"name":"prefix","qualname":"<SnapshotMap>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<K::Suffix, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1513},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":257173,"byte_end":257183,"line_start":256,"line_end":256,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<SnapshotMap>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix) -> Prefix<K::SuperSuffix, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2232},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/mod.rs","byte_start":231822,"byte_end":231832,"line_start":164,"line_end":164,"column_start":5,"column_end":15},"name":"EveryBlock","qualname":"::snapshot::Strategy::EveryBlock","value":"Strategy::EveryBlock","parent":{"krate":0,"index":2231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2234},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/mod.rs","byte_start":231838,"byte_end":231843,"line_start":165,"line_end":165,"column_start":5,"column_end":10},"name":"Never","qualname":"::snapshot::Strategy::Never","value":"Strategy::Never","parent":{"krate":0,"index":2231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2236},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/mod.rs","byte_start":232182,"byte_end":232190,"line_start":171,"line_end":171,"column_start":5,"column_end":13},"name":"Selected","qualname":"::snapshot::Strategy::Selected","value":"Strategy::Selected","parent":{"krate":0,"index":2231},"children":[],"decl_id":null,"docs":" Only writes for linked blocks - does a few more reads to save some writes.\n Probably uses more gas, but less total disk usage.","sig":null,"attributes":[{"value":"/ Only writes for linked blocks - does a few more reads to save some writes.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/mod.rs","byte_start":231849,"byte_end":231927,"line_start":166,"line_end":166,"column_start":5,"column_end":83}},{"value":"/ Probably uses more gas, but less total disk usage.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/mod.rs","byte_start":231932,"byte_end":231986,"line_start":167,"line_end":167,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/mod.rs","byte_start":231991,"byte_end":231994,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Note that you need a trusted source (eg. own contract) to set/remove checkpoints.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/mod.rs","byte_start":231999,"byte_end":232084,"line_start":169,"line_end":169,"column_start":5,"column_end":90}},{"value":"/ Useful when the checkpoint setting happens in the same contract as the snapshotting.","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/mod.rs","byte_start":232089,"byte_end":232177,"line_start":170,"line_end":170,"column_start":5,"column_end":93}}]},{"kind":"Enum","id":{"krate":0,"index":2231},"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/mod.rs","byte_start":231807,"byte_end":231815,"line_start":163,"line_end":163,"column_start":10,"column_end":18},"name":"Strategy","qualname":"::snapshot::Strategy","value":"pub enum Strategy { EveryBlock, Never, Selected, }","parent":null,"children":[{"krate":0,"index":2232},{"krate":0,"index":2234},{"krate":0,"index":2236}],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","byte_start":1796,"byte_end":1799,"line_start":31,"line_end":31,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","byte_start":2311,"byte_end":2317,"line_start":58,"line_end":58,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","byte_start":2907,"byte_end":2911,"line_start":85,"line_end":85,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","byte_start":4278,"byte_end":4290,"line_start":135,"line_end":135,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":24768,"byte_end":24778,"line_start":35,"line_end":35,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":25264,"byte_end":25274,"line_start":55,"line_end":55,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":28576,"byte_end":28586,"line_start":139,"line_end":139,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":29516,"byte_end":29526,"line_start":172,"line_end":172,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":30592,"byte_end":30602,"line_start":201,"line_end":201,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":31022,"byte_end":31032,"line_start":217,"line_end":217,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":289},{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":69392,"byte_end":69410,"line_start":24,"line_end":24,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":70389,"byte_end":70407,"line_start":61,"line_end":61,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":71309,"byte_end":71327,"line_start":93,"line_end":93,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":74813,"byte_end":74831,"line_start":184,"line_end":184,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":75793,"byte_end":75811,"line_start":217,"line_end":217,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":76231,"byte_end":76249,"line_start":233,"line_end":233,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":409},{"krate":0,"index":411},{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":106371,"byte_end":106381,"line_start":35,"line_end":35,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":108789,"byte_end":108799,"line_start":124,"line_end":124,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":507},{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":109338,"byte_end":109348,"line_start":141,"line_end":141,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":109741,"byte_end":109751,"line_start":157,"line_end":157,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":110763,"byte_end":110773,"line_start":191,"line_end":191,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":526},{"krate":0,"index":528},{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":112619,"byte_end":112629,"line_start":245,"line_end":245,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":113401,"byte_end":113411,"line_start":273,"line_end":273,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":545},{"krate":0,"index":547},{"krate":0,"index":549},{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":116663,"byte_end":116674,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":117462,"byte_end":117473,"line_start":64,"line_end":64,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":640},{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":118774,"byte_end":118785,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":119647,"byte_end":119658,"line_start":136,"line_end":136,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":120530,"byte_end":120541,"line_start":168,"line_end":168,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":675},{"krate":0,"index":677},{"krate":0,"index":679},{"krate":0,"index":682},{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/item.rs","byte_start":127780,"byte_end":127784,"line_start":19,"line_end":19,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/item.rs","byte_start":127978,"byte_end":127982,"line_start":28,"line_end":28,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":144894,"byte_end":144897,"line_start":21,"line_end":21,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":145163,"byte_end":145166,"line_start":33,"line_end":33,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":841}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":150105,"byte_end":150108,"line_start":207,"line_end":207,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":150312,"byte_end":150315,"line_start":218,"line_end":218,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":150432,"byte_end":150438,"line_start":224,"line_end":224,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":150649,"byte_end":150655,"line_start":235,"line_end":235,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":934}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":151260,"byte_end":151264,"line_start":261,"line_end":261,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":151529,"byte_end":151533,"line_start":273,"line_end":273,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":152545,"byte_end":152551,"line_start":309,"line_end":309,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":152858,"byte_end":152864,"line_start":324,"line_end":324,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":968}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":154723,"byte_end":154729,"line_start":365,"line_end":365,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":154921,"byte_end":154927,"line_start":374,"line_end":374,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":155031,"byte_end":155037,"line_start":380,"line_end":380,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":155339,"byte_end":155342,"line_start":391,"line_end":391,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":155493,"byte_end":155505,"line_start":400,"line_end":400,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":155617,"byte_end":155629,"line_start":406,"line_end":406,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":155821,"byte_end":155833,"line_start":417,"line_end":417,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":155927,"byte_end":155939,"line_start":423,"line_end":423,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":156037,"byte_end":156049,"line_start":429,"line_end":429,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys_old.rs","byte_start":164487,"byte_end":164496,"line_start":12,"line_end":12,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1029}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys_old.rs","byte_start":164680,"byte_end":164689,"line_start":21,"line_end":21,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1032}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys_old.rs","byte_start":164796,"byte_end":164805,"line_start":27,"line_end":27,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys_old.rs","byte_start":164984,"byte_end":164987,"line_start":36,"line_end":36,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys_old.rs","byte_start":165173,"byte_end":165182,"line_start":43,"line_end":43,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys_old.rs","byte_start":165492,"byte_end":165501,"line_start":58,"line_end":58,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":167096,"byte_end":167099,"line_start":26,"line_end":26,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1123}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":167327,"byte_end":167330,"line_start":36,"line_end":36,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":169800,"byte_end":169803,"line_start":113,"line_end":113,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1144},{"krate":0,"index":1145}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":170251,"byte_end":170254,"line_start":129,"line_end":129,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1150},{"krate":0,"index":1152},{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":172036,"byte_end":172039,"line_start":185,"line_end":185,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1160},{"krate":0,"index":1162},{"krate":0,"index":1164},{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/path.rs","byte_start":208957,"byte_end":208961,"line_start":21,"line_end":21,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1208},{"krate":0,"index":1209}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/path.rs","byte_start":209109,"byte_end":209113,"line_start":32,"line_end":32,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1212},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1219}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":212307,"byte_end":212312,"line_start":26,"line_end":26,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1285},{"krate":0,"index":1287},{"krate":0,"index":1289},{"krate":0,"index":1291}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":213254,"byte_end":213265,"line_start":54,"line_end":54,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1296},{"krate":0,"index":1298},{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":214737,"byte_end":214743,"line_start":107,"line_end":107,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1314},{"krate":0,"index":1315}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":214923,"byte_end":214929,"line_start":119,"line_end":119,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1324},{"krate":0,"index":1327},{"krate":0,"index":1330}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":240593,"byte_end":240605,"line_start":17,"line_end":17,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":241518,"byte_end":241530,"line_start":50,"line_end":50,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1403}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":249976,"byte_end":249987,"line_start":23,"line_end":23,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1471}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":250586,"byte_end":250597,"line_start":49,"line_end":49,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1476},{"krate":0,"index":1477}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":251022,"byte_end":251033,"line_start":63,"line_end":63,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":1491}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":254307,"byte_end":254318,"line_start":160,"line_end":160,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1498},{"krate":0,"index":1500}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":255282,"byte_end":255293,"line_start":195,"line_end":195,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1506},{"krate":0,"index":1508},{"krate":0,"index":1510},{"krate":0,"index":1512},{"krate":0,"index":1513},{"krate":0,"index":1514}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/mod.rs","byte_start":227166,"byte_end":227174,"line_start":30,"line_end":30,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1564},{"krate":0,"index":1565},{"krate":0,"index":1567}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/mod.rs","byte_start":228131,"byte_end":228139,"line_start":63,"line_end":63,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1572},{"krate":0,"index":1573},{"krate":0,"index":1574},{"krate":0,"index":1575},{"krate":0,"index":1576},{"krate":0,"index":1577}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","byte_start":1796,"byte_end":1799,"line_start":31,"line_end":31,"column_start":25,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":5,"index":7063},"to":{"krate":0,"index":30}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","byte_start":2311,"byte_end":2317,"line_start":58,"line_end":58,"column_start":25,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":5,"index":7606},"to":{"krate":0,"index":30}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","byte_start":2907,"byte_end":2911,"line_start":85,"line_end":85,"column_start":25,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":18,"index":2695},"to":{"krate":0,"index":30}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/de.rs","byte_start":4278,"byte_end":4290,"line_start":135,"line_end":135,"column_start":25,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2112},"to":{"krate":0,"index":30}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/endian.rs","byte_start":16104,"byte_end":16109,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":3021},"to":{"krate":0,"index":104}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/endian.rs","byte_start":16112,"byte_end":16116,"line_start":12,"line_end":12,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":3026},"to":{"krate":0,"index":104}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":24768,"byte_end":24778,"line_start":35,"line_end":35,"column_start":19,"column_end":29},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":25264,"byte_end":25274,"line_start":55,"line_end":55,"column_start":19,"column_end":29},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":28576,"byte_end":28586,"line_start":139,"line_end":139,"column_start":19,"column_end":29},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":29516,"byte_end":29526,"line_start":172,"line_end":172,"column_start":19,"column_end":29},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":30592,"byte_end":30602,"line_start":201,"line_end":201,"column_start":19,"column_end":29},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_map.rs","byte_start":31022,"byte_end":31032,"line_start":217,"line_end":217,"column_start":19,"column_end":29},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":69392,"byte_end":69410,"line_start":24,"line_end":24,"column_start":19,"column_end":37},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":70389,"byte_end":70407,"line_start":61,"line_end":61,"column_start":19,"column_end":37},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":71309,"byte_end":71327,"line_start":93,"line_end":93,"column_start":19,"column_end":37},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":74813,"byte_end":74831,"line_start":184,"line_end":184,"column_start":19,"column_end":37},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":75793,"byte_end":75811,"line_start":217,"line_end":217,"column_start":19,"column_end":37},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexed_snapshot.rs","byte_start":76231,"byte_end":76249,"line_start":233,"line_end":233,"column_start":19,"column_end":37},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":106371,"byte_end":106381,"line_start":35,"line_end":35,"column_start":21,"column_end":31},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":108789,"byte_end":108799,"line_start":124,"line_end":124,"column_start":34,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":479},"to":{"krate":0,"index":711}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":109338,"byte_end":109348,"line_start":141,"line_end":141,"column_start":21,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":109741,"byte_end":109751,"line_start":157,"line_end":157,"column_start":21,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":110763,"byte_end":110773,"line_start":191,"line_end":191,"column_start":21,"column_end":31},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":112619,"byte_end":112629,"line_start":245,"line_end":245,"column_start":21,"column_end":31},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/multi.rs","byte_start":113401,"byte_end":113411,"line_start":273,"line_end":273,"column_start":21,"column_end":31},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":116663,"byte_end":116674,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":117462,"byte_end":117473,"line_start":64,"line_end":64,"column_start":34,"column_end":45},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":620},"to":{"krate":0,"index":711}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":118774,"byte_end":118785,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":119647,"byte_end":119658,"line_start":136,"line_end":136,"column_start":21,"column_end":32},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/indexes/unique.rs","byte_start":120530,"byte_end":120541,"line_start":168,"line_end":168,"column_start":21,"column_end":32},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/int_key.rs","byte_start":123632,"byte_end":123637,"line_start":8,"line_end":8,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":3021},"to":{"krate":0,"index":719}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/int_key.rs","byte_start":123640,"byte_end":123644,"line_start":8,"line_end":8,"column_start":29,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":3026},"to":{"krate":0,"index":719}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/item.rs","byte_start":127780,"byte_end":127784,"line_start":19,"line_end":19,"column_start":13,"column_end":17},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":764},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/item.rs","byte_start":127978,"byte_end":127982,"line_start":28,"line_end":28,"column_start":13,"column_end":17},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":764},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":144894,"byte_end":144897,"line_start":21,"line_end":21,"column_start":26,"column_end":29},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1987},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":145163,"byte_end":145166,"line_start":33,"line_end":33,"column_start":31,"column_end":34},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1987},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":146086,"byte_end":146091,"line_start":58,"line_end":58,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2637},"to":{"krate":0,"index":842}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":150105,"byte_end":150108,"line_start":207,"line_end":207,"column_start":29,"column_end":32},"kind":{"Impl":{"id":64}},"from":{"krate":5,"index":7063},"to":{"krate":0,"index":842}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":150312,"byte_end":150315,"line_start":218,"line_end":218,"column_start":27,"column_end":30},"kind":{"Impl":{"id":65}},"from":{"krate":5,"index":7063},"to":{"krate":0,"index":891}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":150432,"byte_end":150438,"line_start":224,"line_end":224,"column_start":29,"column_end":35},"kind":{"Impl":{"id":66}},"from":{"krate":5,"index":7606},"to":{"krate":0,"index":842}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":150649,"byte_end":150655,"line_start":235,"line_end":235,"column_start":27,"column_end":33},"kind":{"Impl":{"id":67}},"from":{"krate":5,"index":7606},"to":{"krate":0,"index":891}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":151260,"byte_end":151264,"line_start":261,"line_end":261,"column_start":29,"column_end":33},"kind":{"Impl":{"id":68}},"from":{"krate":18,"index":2695},"to":{"krate":0,"index":842}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":151529,"byte_end":151533,"line_start":273,"line_end":273,"column_start":27,"column_end":31},"kind":{"Impl":{"id":69}},"from":{"krate":18,"index":2695},"to":{"krate":0,"index":891}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":152545,"byte_end":152551,"line_start":309,"line_end":309,"column_start":48,"column_end":54},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2091},"to":{"krate":0,"index":842}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":152858,"byte_end":152864,"line_start":324,"line_end":324,"column_start":38,"column_end":44},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2091},"to":{"krate":0,"index":891}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":154723,"byte_end":154729,"line_start":365,"line_end":365,"column_start":28,"column_end":34},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2091},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":154921,"byte_end":154927,"line_start":374,"line_end":374,"column_start":40,"column_end":46},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2091},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":155031,"byte_end":155037,"line_start":380,"line_end":380,"column_start":35,"column_end":41},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2091},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":155339,"byte_end":155342,"line_start":391,"line_end":391,"column_start":37,"column_end":40},"kind":{"Impl":{"id":91}},"from":{"krate":5,"index":7063},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":155493,"byte_end":155505,"line_start":400,"line_end":400,"column_start":6,"column_end":18},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":155617,"byte_end":155629,"line_start":406,"line_end":406,"column_start":29,"column_end":41},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2112},"to":{"krate":0,"index":842}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":155821,"byte_end":155833,"line_start":417,"line_end":417,"column_start":27,"column_end":39},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2112},"to":{"krate":0,"index":891}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":155927,"byte_end":155939,"line_start":423,"line_end":423,"column_start":24,"column_end":36},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2112},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys.rs","byte_start":156037,"byte_end":156049,"line_start":429,"line_end":429,"column_start":26,"column_end":38},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2112},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys_old.rs","byte_start":164487,"byte_end":164496,"line_start":12,"line_end":12,"column_start":17,"column_end":26},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys_old.rs","byte_start":164680,"byte_end":164689,"line_start":21,"line_end":21,"column_start":29,"column_end":38},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2126},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys_old.rs","byte_start":164796,"byte_end":164805,"line_start":27,"line_end":27,"column_start":35,"column_end":44},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2126},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys_old.rs","byte_start":164984,"byte_end":164987,"line_start":36,"line_end":36,"column_start":40,"column_end":43},"kind":{"Impl":{"id":100}},"from":{"krate":5,"index":7063},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys_old.rs","byte_start":165173,"byte_end":165182,"line_start":43,"line_end":43,"column_start":48,"column_end":57},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2126},"to":{"krate":0,"index":842}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/keys_old.rs","byte_start":165492,"byte_end":165501,"line_start":58,"line_end":58,"column_start":38,"column_end":47},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2126},"to":{"krate":0,"index":891}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":167096,"byte_end":167099,"line_start":26,"line_end":26,"column_start":16,"column_end":19},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":167327,"byte_end":167330,"line_start":36,"line_end":36,"column_start":16,"column_end":19},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":169800,"byte_end":169803,"line_start":113,"line_end":113,"column_start":16,"column_end":19},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":170251,"byte_end":170254,"line_start":129,"line_end":129,"column_start":16,"column_end":19},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/map.rs","byte_start":172036,"byte_end":172039,"line_start":185,"line_end":185,"column_start":16,"column_end":19},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/path.rs","byte_start":208957,"byte_end":208961,"line_start":21,"line_end":21,"column_start":19,"column_end":23},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2164},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/path.rs","byte_start":209109,"byte_end":209113,"line_start":32,"line_end":32,"column_start":9,"column_end":13},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":212307,"byte_end":212312,"line_start":26,"line_end":26,"column_start":6,"column_end":11},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":213254,"byte_end":213265,"line_start":54,"line_end":54,"column_start":27,"column_end":38},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":214737,"byte_end":214743,"line_start":107,"line_end":107,"column_start":22,"column_end":28},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2202},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/prefix.rs","byte_start":214923,"byte_end":214929,"line_start":119,"line_end":119,"column_start":12,"column_end":18},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":240593,"byte_end":240605,"line_start":17,"line_end":17,"column_start":13,"column_end":25},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/item.rs","byte_start":241518,"byte_end":241530,"line_start":50,"line_end":50,"column_start":13,"column_end":25},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":249976,"byte_end":249987,"line_start":23,"line_end":23,"column_start":16,"column_end":27},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":250586,"byte_end":250597,"line_start":49,"line_end":49,"column_start":16,"column_end":27},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":251022,"byte_end":251033,"line_start":63,"line_end":63,"column_start":16,"column_end":27},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":254307,"byte_end":254318,"line_start":160,"line_end":160,"column_start":16,"column_end":27},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/map.rs","byte_start":255282,"byte_end":255293,"line_start":195,"line_end":195,"column_start":16,"column_end":27},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/mod.rs","byte_start":227166,"byte_end":227174,"line_start":30,"line_end":30,"column_start":16,"column_end":24},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2214},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/tougerthao/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.11.1/src/snapshot/mod.rs","byte_start":228131,"byte_end":228139,"line_start":63,"line_end":63,"column_start":16,"column_end":24},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2214},"to":{"krate":4294967295,"index":4294967295}}]}